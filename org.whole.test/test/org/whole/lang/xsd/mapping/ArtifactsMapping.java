package org.whole.lang.xsd.mapping;

import org.whole.lang.builders.IBuilderOperation;
import org.whole.lang.templates.AbstractTemplateFactory;

public class ArtifactsMapping extends AbstractTemplateFactory<org.whole.lang.xsd.mapping.model.MappingStrategy> {

    public void apply(IBuilderOperation op) {
        org.whole.lang.xsd.mapping.builders.IMappingBuilder b0 = (org.whole.lang.xsd.mapping.builders.IMappingBuilder) op.wGetBuilder(org.whole.lang.xsd.mapping.reflect.MappingLanguageKit.URI);
        b0.MappingStrategy_();
        b0.URI("http://lang.whole.org/Artifacts");
        b0.URI("Artifacts.xsd");
        b0.BooleanType(true);
        b0.BooleanType(true);
        b0.BooleanType(false);
        org.whole.lang.commons.builders.ICommonsBuilder b1 = (org.whole.lang.commons.builders.ICommonsBuilder) op.wGetBuilder(org.whole.lang.commons.reflect.CommonsLanguageKit.URI);
        b1.Resolver();
        b1.Resolver();
        b0.Mappings_(49);
        b0.RootMapping_();
        b0.NCName("workspace");
        b0.URI("Workspace");
        b0._RootMapping();
        b0.ElementMapping_();
        b0.URI("Workspace");
        b0.NCName("metadata");
        b0.URI("Metadata");
        b0.URI("metadata");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("Workspace");
        b0.NCName("projects");
        b0.URI("Projects");
        b0.URI("projects");
        b0._ElementMapping();
        b0.RootMapping_();
        b0.NCName("projects");
        b0.URI("Projects");
        b0._RootMapping();
        b0.ElementMapping_();
        b0.URI("Projects");
        b0.NCName("project");
        b0.URI("Project");
        b1.Resolver();
        b0._ElementMapping();
        b0.RootMapping_();
        b0.NCName("project");
        b0.URI("Project");
        b0._RootMapping();
        b0.ElementMapping_();
        b0.URI("Project");
        b0.NCName("name");
        b0.URI("Name");
        b0.URI("name");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("Project");
        b0.NCName("natures");
        b0.URI("Natures");
        b0.URI("natures");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("Project");
        b0.NCName("metadata");
        b0.URI("Metadata");
        b0.URI("metadata");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("Project");
        b0.NCName("artifacts");
        b0.URI("Artifacts");
        b0.URI("artifacts");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("Project");
        b0.NCName("locationURI");
        b0.URI("LocationURI");
        b0.URI("locationURI");
        b0._ElementMapping();
        b0.RootMapping_();
        b0.NCName("artifacts");
        b0.URI("Artifacts");
        b0._RootMapping();
        b0.ElementMapping_();
        b0.URI("Artifacts");
        b0.NCName("packageArtifact");
        b0.URI("PackageArtifact");
        b1.Resolver();
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("Artifacts");
        b0.NCName("folderArtifact");
        b0.URI("FolderArtifact");
        b1.Resolver();
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("Artifacts");
        b0.NCName("fileArtifact");
        b0.URI("FileArtifact");
        b1.Resolver();
        b0._ElementMapping();
        b0.RootMapping_();
        b0.NCName("packageArtifact");
        b0.URI("PackageArtifact");
        b0._RootMapping();
        b0.ElementMapping_();
        b0.URI("PackageArtifact");
        b0.NCName("name");
        b0.URI("Name");
        b0.URI("name");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("PackageArtifact");
        b0.NCName("metadata");
        b0.URI("Metadata");
        b0.URI("metadata");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("PackageArtifact");
        b0.NCName("artifacts");
        b0.URI("Artifacts");
        b0.URI("artifacts");
        b0._ElementMapping();
        b0.RootMapping_();
        b0.NCName("folderArtifact");
        b0.URI("FolderArtifact");
        b0._RootMapping();
        b0.ElementMapping_();
        b0.URI("FolderArtifact");
        b0.NCName("name");
        b0.URI("Name");
        b0.URI("name");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("FolderArtifact");
        b0.NCName("metadata");
        b0.URI("Metadata");
        b0.URI("metadata");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("FolderArtifact");
        b0.NCName("artifacts");
        b0.URI("Artifacts");
        b0.URI("artifacts");
        b0._ElementMapping();
        b0.RootMapping_();
        b0.NCName("fileArtifact");
        b0.URI("FileArtifact");
        b0._RootMapping();
        b0.ElementMapping_();
        b0.URI("FileArtifact");
        b0.NCName("name");
        b0.URI("Name");
        b0.URI("name");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("FileArtifact");
        b0.NCName("nameWithExtension");
        b0.URI("NameWithExtension");
        b0.URI("name");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("FileArtifact");
        b0.NCName("metadata");
        b0.URI("Metadata");
        b0.URI("metadata");
        b0._ElementMapping();
        b0.RootMapping_();
        b0.NCName("natures");
        b0.URI("Natures");
        b0._RootMapping();
        b0.ElementMapping_();
        b0.URI("Natures");
        b0.NCName("nature");
        b0.URI("Nature");
        b1.Resolver();
        b0._ElementMapping();
        b0.RootMapping_();
        b0.NCName("nature");
        b0.URI("Nature");
        b0._RootMapping();
        b0.RootMapping_();
        b0.NCName("locationURI");
        b0.URI("LocationURI");
        b0._RootMapping();
        b0.RootMapping_();
        b0.NCName("metadata");
        b0.URI("Metadata");
        b0._RootMapping();
        b0.ElementMapping_();
        b0.URI("Metadata");
        b0.NCName("copyright");
        b0.URI("Copyright");
        b0.URI("copyright");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("Metadata");
        b0.NCName("license");
        b0.URI("License");
        b0.URI("license");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("Metadata");
        b0.NCName("author");
        b0.URI("Author");
        b0.URI("author");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("Metadata");
        b0.NCName("attributes");
        b0.URI("Attributes");
        b0.URI("attributes");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("Metadata");
        b0.NCName("persistenceKitId");
        b0.URI("PersistenceKitId");
        b0.URI("persistenceKitId");
        b0._ElementMapping();
        b0.RootMapping_();
        b0.NCName("name");
        b0.URI("Name");
        b0._RootMapping();
        b0.RootMapping_();
        b0.NCName("nameWithExtension");
        b0.URI("NameWithExtension");
        b0._RootMapping();
        b0.ElementMapping_();
        b0.URI("NameWithExtension");
        b0.NCName("name");
        b0.URI("Name");
        b0.URI("name");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("NameWithExtension");
        b0.NCName("extension");
        b0.URI("Extension");
        b0.URI("extension");
        b0._ElementMapping();
        b0.RootMapping_();
        b0.NCName("copyright");
        b0.URI("Copyright");
        b0._RootMapping();
        b0.RootMapping_();
        b0.NCName("license");
        b0.URI("License");
        b0._RootMapping();
        b0.RootMapping_();
        b0.NCName("author");
        b0.URI("Author");
        b0._RootMapping();
        b0.RootMapping_();
        b0.NCName("extension");
        b0.URI("Extension");
        b0._RootMapping();
        b0.RootMapping_();
        b0.NCName("attributes");
        b0.URI("Attributes");
        b0._RootMapping();
        b0.ElementMapping_();
        b0.URI("Attributes");
        b0.NCName("attribute");
        b0.URI("Attribute");
        b1.Resolver();
        b0._ElementMapping();
        b0.RootMapping_();
        b0.NCName("attribute");
        b0.URI("Attribute");
        b0._RootMapping();
        b0.RootMapping_();
        b0.NCName("persistenceKitId");
        b0.URI("PersistenceKitId");
        b0._RootMapping();
        b0._Mappings();
        b0.DataTypes_(1);
        b0.EnumDataType_();
        b0.URI("Attribute");
        b0.EnumValues_(4);
        b0.EnumValue_();
        b0.Value("derived");
        b0.Value("derived");
        b0._EnumValue();
        b0.EnumValue_();
        b0.Value("readonly");
        b0.Value("readonly");
        b0._EnumValue();
        b0.EnumValue_();
        b0.Value("merge");
        b0.Value("merge");
        b0._EnumValue();
        b0.EnumValue_();
        b0.Value("source");
        b0.Value("source");
        b0._EnumValue();
        b0._EnumValues();
        b0._EnumDataType();
        b0._DataTypes();
        b0._MappingStrategy();
    }
}
