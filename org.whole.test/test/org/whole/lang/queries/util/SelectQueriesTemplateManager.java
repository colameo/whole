package org.whole.lang.queries.util;

import org.whole.lang.model.IEntity;
import org.whole.lang.templates.AbstractTemplateFactory;
import org.whole.lang.templates.AbstractTemplateManager;
import org.whole.lang.templates.ITemplateFactory;

public class SelectQueriesTemplateManager extends AbstractTemplateManager {

    private static class SingletonHolder {
        private static final SelectQueriesTemplateManager instance = new SelectQueriesTemplateManager();
    }

    public static SelectQueriesTemplateManager instance() {
        return SingletonHolder.instance;
    }

    private SelectQueriesTemplateManager() {
        put("selectPath1", newSelectPath1());
        put("selectPath2", newSelectPath2());
        put("selectNonTerminalSet", newSelectNonTerminalSet());
        put("selectTuple1", newSelectTuple1());
        put("selectTemplate1", newSelectTemplate1());
        put("selectTupleWithTemplates", newSelectTupleWithTemplates());
        put("selectTemplateWithNestedQuery", newSelectTemplateWithNestedQuery());
        put("selectTemplateWithNestedRelativeQuery", newSelectTemplateWithNestedRelativeQuery());
        put("selectTemplateWithNestedEmptyQuery", newSelectTemplateWithNestedEmptyQuery());
        put("selectTemplateWithJavaHelpers", newSelectTemplateWithJavaHelpers());
        put("selectTemplateWithFreeVariable", newSelectTemplateWithFreeVariable());
        put("selectTemplateWithTwoNestedSimpleQueries", newSelectTemplateWithTwoNestedSimpleQueries());
        put("selectTemplateWithTwoNestedSelectQueries", newSelectTemplateWithTwoNestedSelectQueries());
        put("selectHelperResultAs", newSelectHelperResultAs());
        put("selectTemplateFromPattern", newSelectTemplateFromPattern());
        put("selectTemplateFromPathWithPattern", newSelectTemplateFromPathWithPattern());
        put("selectTemplateFromPatternWithWhere", newSelectTemplateFromPatternWithWhere());
        put("selectTemplateAs", newSelectTemplateAs());
        put("selectTupleOfTemplatesAs", newSelectTupleOfTemplatesAs());
        put("selectTemplateFromWhere", newSelectTemplateFromWhere());
        put("selectVariableScopes", newSelectVariableScopes());
        put("selectBindingScopes", newSelectBindingScopes());
        put("selectBindingScopes2", newSelectBindingScopes2());
        put("selectBindingScopes3", newSelectBindingScopes3());
        put("selectDeclaredNamesBinding", newSelectDeclaredNamesBinding());
    }

    public ITemplateFactory<IEntity> newSelectPath1() {
        return new AbstractTemplateFactory<IEntity>() {

            public void apply(org.whole.lang.builders.IBuilderOperation op) {
                org.whole.lang.queries.builders.IQueriesBuilder b0 = (org.whole.lang.queries.builders.IQueriesBuilder) op.wGetBuilder(org.whole.lang.queries.reflect.QueriesLanguageKit.URI);
                b0.Select_();
                b0.FeatureStep("name");
                b0.Path_(2);
                b0.FeatureStep("phraseStructure");
                b0.Filter_();
                b0.ChildStep();
                b0.TypeTest("Production");
                b0._Filter();
                b0._Path();
                org.whole.lang.commons.builders.ICommonsBuilder b1 = (org.whole.lang.commons.builders.ICommonsBuilder) op.wGetBuilder(org.whole.lang.commons.reflect.CommonsLanguageKit.URI);
                b1.Resolver();
                b1.Resolver();
                b0._Select();
            }
        };
    }

    public ITemplateFactory<IEntity> newSelectPath2() {
        return new AbstractTemplateFactory<IEntity>() {

            public void apply(org.whole.lang.builders.IBuilderOperation op) {
                org.whole.lang.queries.builders.IQueriesBuilder b0 = (org.whole.lang.queries.builders.IQueriesBuilder) op.wGetBuilder(org.whole.lang.queries.reflect.QueriesLanguageKit.URI);
                b0.Select_();
                b0.Path_(2);
                b0.VariableRefStep("production");
                b0.FeatureStep("name");
                b0._Path();
                b0.Path_(2);
                b0.FeatureStep("phraseStructure");
                b0.Filter_();
                b0.ChildStep();
                b0.And_(2);
                b0.TypeTest("Production");
                b0.VariableTest("production");
                b0._And();
                b0._Filter();
                b0._Path();
                org.whole.lang.commons.builders.ICommonsBuilder b1 = (org.whole.lang.commons.builders.ICommonsBuilder) op.wGetBuilder(org.whole.lang.commons.reflect.CommonsLanguageKit.URI);
                b1.Resolver();
                b1.Resolver();
                b0._Select();
            }
        };
    }

    public ITemplateFactory<IEntity> newSelectNonTerminalSet() {
        return new AbstractTemplateFactory<IEntity>() {

            public void apply(org.whole.lang.builders.IBuilderOperation op) {
                org.whole.lang.queries.builders.IQueriesBuilder b0 = (org.whole.lang.queries.builders.IQueriesBuilder) op.wGetBuilder(org.whole.lang.queries.reflect.QueriesLanguageKit.URI);
                b0.Select_();
                b0.SelfStep();
                b0.Filter_();
                b0.DescendantOrSelfStep();
                b0.And_(2);
                b0.TypeTest("NonTerminal");
                b0.DistinctTest_();
                org.whole.lang.commons.builders.ICommonsBuilder b1 = (org.whole.lang.commons.builders.ICommonsBuilder) op.wGetBuilder(org.whole.lang.commons.reflect.CommonsLanguageKit.URI);
                b1.Resolver();
                b0._DistinctTest();
                b0._And();
                b0._Filter();
                b1.Resolver();
                b1.Resolver();
                b0._Select();
            }
        };
    }

    public ITemplateFactory<IEntity> newSelectTuple1() {
        return new AbstractTemplateFactory<IEntity>() {

            public void apply(org.whole.lang.builders.IBuilderOperation op) {
                org.whole.lang.queries.builders.IQueriesBuilder b0 = (org.whole.lang.queries.builders.IQueriesBuilder) op.wGetBuilder(org.whole.lang.queries.reflect.QueriesLanguageKit.URI);
                b0.Select_();
                b0.Tuple_(4);
                b0.FeatureStep("name");
                b0.FeatureStep("rule");
                b0.SelfStep();
                b0.Path_(2);
                b0.Filter_();
                b0.AncestorStep();
                b0.TypeTest("Grammar");
                b0._Filter();
                b0.FeatureStep("name");
                b0._Path();
                b0._Tuple();
                b0.Path_(2);
                b0.FeatureStep("phraseStructure");
                b0.Filter_();
                b0.ChildStep();
                b0.TypeTest("Production");
                b0._Filter();
                b0._Path();
                org.whole.lang.commons.builders.ICommonsBuilder b1 = (org.whole.lang.commons.builders.ICommonsBuilder) op.wGetBuilder(org.whole.lang.commons.reflect.CommonsLanguageKit.URI);
                b1.Resolver();
                b1.Resolver();
                b0._Select();
            }
        };
    }

    public ITemplateFactory<IEntity> newSelectTemplate1() {
        return new AbstractTemplateFactory<IEntity>() {

            public void apply(org.whole.lang.builders.IBuilderOperation op) {
                org.whole.lang.queries.builders.IQueriesBuilder b0 = (org.whole.lang.queries.builders.IQueriesBuilder) op.wGetBuilder(org.whole.lang.queries.reflect.QueriesLanguageKit.URI);
                b0.Select_();
                b0.Tuple_(2);
                org.whole.lang.commons.builders.ICommonsBuilder b1 = (org.whole.lang.commons.builders.ICommonsBuilder) op.wGetBuilder(org.whole.lang.commons.reflect.CommonsLanguageKit.URI);
                b1.StageUpFragment_();
                org.whole.lang.models.builders.IModelsBuilder b2 = (org.whole.lang.models.builders.IModelsBuilder) op.wGetBuilder(org.whole.lang.models.reflect.ModelsLanguageKit.URI);
                b2.Feature_();
                b2.FeatureModifiers_(0);
                b2._FeatureModifiers();
                b1.Variable_();
                b1.VarType("http://lang.whole.org/Models#SimpleName");
                b1.VarName("ftype");
                b1.Quantifier("!");
                b1._Variable();
                b1.Variable_();
                b1.VarType("http://lang.whole.org/Models#SimpleName");
                b1.VarName("fname");
                b1.Quantifier("!");
                b1._Variable();
                b1.Resolver();
                b2._Feature();
                b1._StageUpFragment();
                b0.SelfStep();
                b0._Tuple();
                b0.Path_(3);
                b0.FeatureStep("phraseStructure");
                b0.Filter_();
                b0.ChildStep();
                b0.TypeTest("Production");
                b0._Filter();
                b0.Filter_();
                b0.DescendantOrSelfStep();
                b0.And_(2);
                b0.TypeTest("As");
                b0.And_(2);
                b0.ExpressionTest_();
                b0.Filter_();
                b0.FeatureStep("name");
                b0.VariableTest("fname");
                b0._Filter();
                b0._ExpressionTest();
                b0.ExpressionTest_();
                b0.Filter_();
                b0.FeatureStep("rule");
                b0.And_(2);
                b0.TypeTest("NonTerminal");
                b0.VariableTest("ftype");
                b0._And();
                b0._Filter();
                b0._ExpressionTest();
                b0._And();
                b0._And();
                b0._Filter();
                b0._Path();
                b1.Resolver();
                b0.TemplateNames();
                b0._Select();
            }
        };
    }

    public ITemplateFactory<IEntity> newSelectTupleWithTemplates() {
        return new AbstractTemplateFactory<IEntity>() {

            public void apply(org.whole.lang.builders.IBuilderOperation op) {
                org.whole.lang.queries.builders.IQueriesBuilder b0 = (org.whole.lang.queries.builders.IQueriesBuilder) op.wGetBuilder(org.whole.lang.queries.reflect.QueriesLanguageKit.URI);
                b0.Select_();
                b0.Tuple_(3);
                org.whole.lang.commons.builders.ICommonsBuilder b1 = (org.whole.lang.commons.builders.ICommonsBuilder) op.wGetBuilder(org.whole.lang.commons.reflect.CommonsLanguageKit.URI);
                b1.StageUpFragment_();
                org.whole.lang.java.builders.IJavaBuilder b2 = (org.whole.lang.java.builders.IJavaBuilder) op.wGetBuilder(org.whole.lang.java.reflect.JavaLanguageKit.URI);
                b2.FieldDeclaration_();
                b1.Resolver();
                b2.ExtendedModifiers_(1);
                b2.Modifier("private");
                b2._ExtendedModifiers();
                b1.Variable_();
                b1.VarType("http://lang.whole.org/Java#SimpleType");
                b1.VarName("ftype");
                b1.Quantifier("!");
                b1._Variable();
                b2.VariableDeclarationFragments_(1);
                b2.VariableDeclarationFragment_();
                b1.Variable_();
                b1.VarType("http://lang.whole.org/Java#SimpleName");
                b1.VarName("fname");
                b1.Quantifier("!");
                b1._Variable();
                b1.Resolver();
                b1.Resolver();
                b2._VariableDeclarationFragment();
                b2._VariableDeclarationFragments();
                b2._FieldDeclaration();
                b1._StageUpFragment();
                b1.StageUpFragment_();
                org.whole.lang.models.builders.IModelsBuilder b3 = (org.whole.lang.models.builders.IModelsBuilder) op.wGetBuilder(org.whole.lang.models.reflect.ModelsLanguageKit.URI);
                b3.Feature_();
                b3.FeatureModifiers_(0);
                b3._FeatureModifiers();
                b1.Variable_();
                b1.VarType("http://lang.whole.org/Models#SimpleName");
                b1.VarName("ftype");
                b1.Quantifier("!");
                b1._Variable();
                b1.Variable_();
                b1.VarType("http://lang.whole.org/Models#SimpleName");
                b1.VarName("fname");
                b1.Quantifier("!");
                b1._Variable();
                b1.Resolver();
                b3._Feature();
                b1._StageUpFragment();
                b0.SelfStep();
                b0._Tuple();
                b0.Path_(3);
                b0.FeatureStep("phraseStructure");
                b0.Filter_();
                b0.ChildStep();
                b0.TypeTest("Production");
                b0._Filter();
                b0.Filter_();
                b0.DescendantOrSelfStep();
                b0.And_(2);
                b0.TypeTest("As");
                b0.And_(2);
                b0.ExpressionTest_();
                b0.Filter_();
                b0.FeatureStep("name");
                b0.VariableTest("fname");
                b0._Filter();
                b0._ExpressionTest();
                b0.ExpressionTest_();
                b0.Filter_();
                b0.FeatureStep("rule");
                b0.And_(2);
                b0.TypeTest("NonTerminal");
                b0.VariableTest("ftype");
                b0._And();
                b0._Filter();
                b0._ExpressionTest();
                b0._And();
                b0._And();
                b0._Filter();
                b0._Path();
                b1.Resolver();
                b0.TemplateNames();
                b0._Select();
            }
        };
    }

    public ITemplateFactory<IEntity> newSelectTemplateWithNestedQuery() {
        return new AbstractTemplateFactory<IEntity>() {

            public void apply(org.whole.lang.builders.IBuilderOperation op) {
                org.whole.lang.queries.builders.IQueriesBuilder b0 = (org.whole.lang.queries.builders.IQueriesBuilder) op.wGetBuilder(org.whole.lang.queries.reflect.QueriesLanguageKit.URI);
                b0.Select_();
                org.whole.lang.commons.builders.ICommonsBuilder b1 = (org.whole.lang.commons.builders.ICommonsBuilder) op.wGetBuilder(org.whole.lang.commons.reflect.CommonsLanguageKit.URI);
                b1.StageUpFragment_();
                org.whole.lang.java.builders.IJavaBuilder b2 = (org.whole.lang.java.builders.IJavaBuilder) op.wGetBuilder(org.whole.lang.java.reflect.JavaLanguageKit.URI);
                b2.ClassDeclaration_();
                b1.Resolver();
                b1.Resolver();
                b1.Variable_();
                b1.VarType("http://lang.whole.org/Java#SimpleName");
                b1.VarName("ename");
                b1.Quantifier("!");
                b1._Variable();
                b1.Resolver();
                b1.Resolver();
                b1.Resolver();
                b2.BodyDeclarations_(3);
                b2.FieldDeclaration_();
                b1.Resolver();
                b2.ExtendedModifiers_(1);
                b2.Modifier("private");
                b2._ExtendedModifiers();
                b2.PrimitiveType("int");
                b2.VariableDeclarationFragments_(1);
                b2.VariableDeclarationFragment_();
                b2.SimpleName("aField");
                b1.Resolver();
                b1.Resolver();
                b2._VariableDeclarationFragment();
                b2._VariableDeclarationFragments();
                b2._FieldDeclaration();
                b1.StageDownFragment_();
                b0.Select_();
                b1.StageUpFragment_();
                b2.FieldDeclaration_();
                b1.Resolver();
                b2.ExtendedModifiers_(1);
                b2.Modifier("private");
                b2._ExtendedModifiers();
                b1.Variable_();
                b1.VarType("http://lang.whole.org/Java#SimpleType");
                b1.VarName("ftype");
                b1.Quantifier("!");
                b1._Variable();
                b2.VariableDeclarationFragments_(1);
                b2.VariableDeclarationFragment_();
                b1.Variable_();
                b1.VarType("http://lang.whole.org/Java#SimpleName");
                b1.VarName("fname");
                b1.Quantifier("!");
                b1._Variable();
                b1.Resolver();
                b1.Resolver();
                b2._VariableDeclarationFragment();
                b2._VariableDeclarationFragments();
                b2._FieldDeclaration();
                b1._StageUpFragment();
                b0.Path_(3);
                b0.VariableRefStep("entity");
                b0.FeatureStep("features");
                b0.Filter_();
                b0.ChildStep();
                b0.And_(2);
                b0.TypeTest("Feature");
                b0.And_(2);
                b0.ExpressionTest_();
                b0.Filter_();
                b0.FeatureStep("type");
                b0.VariableTest("ftype");
                b0._Filter();
                b0._ExpressionTest();
                b0.ExpressionTest_();
                b0.Filter_();
                b0.FeatureStep("name");
                b0.VariableTest("fname");
                b0._Filter();
                b0._ExpressionTest();
                b0._And();
                b0._And();
                b0._Filter();
                b0._Path();
                b1.Resolver();
                b0.TemplateNames();
                b0._Select();
                b1._StageDownFragment();
                b2.FieldDeclaration_();
                b1.Resolver();
                b2.ExtendedModifiers_(1);
                b2.Modifier("private");
                b2._ExtendedModifiers();
                b2.PrimitiveType("int");
                b2.VariableDeclarationFragments_(1);
                b2.VariableDeclarationFragment_();
                b2.SimpleName("anotherField");
                b1.Resolver();
                b1.Resolver();
                b2._VariableDeclarationFragment();
                b2._VariableDeclarationFragments();
                b2._FieldDeclaration();
                b2._BodyDeclarations();
                b2._ClassDeclaration();
                b1._StageUpFragment();
                b0.Path_(2);
                b0.FeatureStep("declarations");
                b0.Filter_();
                b0.ChildStep();
                b0.And_(2);
                b0.And_(2);
                b0.TypeTest("SimpleEntity");
                b0.VariableTest("entity");
                b0._And();
                b0.ExpressionTest_();
                b0.Filter_();
                b0.FeatureStep("name");
                b0.VariableTest("ename");
                b0._Filter();
                b0._ExpressionTest();
                b0._And();
                b0._Filter();
                b0._Path();
                b1.Resolver();
                b0.TemplateNames();
                b0._Select();
            }
        };
    }

    public ITemplateFactory<IEntity> newSelectTemplateWithNestedRelativeQuery() {
        return new AbstractTemplateFactory<IEntity>() {

            public void apply(org.whole.lang.builders.IBuilderOperation op) {
                org.whole.lang.queries.builders.IQueriesBuilder b0 = (org.whole.lang.queries.builders.IQueriesBuilder) op.wGetBuilder(org.whole.lang.queries.reflect.QueriesLanguageKit.URI);
                b0.Select_();
                org.whole.lang.commons.builders.ICommonsBuilder b1 = (org.whole.lang.commons.builders.ICommonsBuilder) op.wGetBuilder(org.whole.lang.commons.reflect.CommonsLanguageKit.URI);
                b1.StageUpFragment_();
                org.whole.lang.java.builders.IJavaBuilder b2 = (org.whole.lang.java.builders.IJavaBuilder) op.wGetBuilder(org.whole.lang.java.reflect.JavaLanguageKit.URI);
                b2.ClassDeclaration_();
                b1.Resolver();
                b1.Resolver();
                b1.Variable_();
                b1.VarType("http://lang.whole.org/Java#SimpleName");
                b1.VarName("ename");
                b1.Quantifier("!");
                b1._Variable();
                b1.Resolver();
                b1.Resolver();
                b1.Resolver();
                b2.BodyDeclarations_(3);
                b2.FieldDeclaration_();
                b1.Resolver();
                b2.ExtendedModifiers_(1);
                b2.Modifier("private");
                b2._ExtendedModifiers();
                b2.PrimitiveType("int");
                b2.VariableDeclarationFragments_(1);
                b2.VariableDeclarationFragment_();
                b2.SimpleName("aField");
                b1.Resolver();
                b1.Resolver();
                b2._VariableDeclarationFragment();
                b2._VariableDeclarationFragments();
                b2._FieldDeclaration();
                b1.StageDownFragment_();
                b0.Select_();
                b1.StageUpFragment_();
                b2.FieldDeclaration_();
                b1.Resolver();
                b2.ExtendedModifiers_(1);
                b2.Modifier("private");
                b2._ExtendedModifiers();
                b1.Variable_();
                b1.VarType("http://lang.whole.org/Java#SimpleType");
                b1.VarName("ftype");
                b1.Quantifier("!");
                b1._Variable();
                b2.VariableDeclarationFragments_(1);
                b2.VariableDeclarationFragment_();
                b1.Variable_();
                b1.VarType("http://lang.whole.org/Java#SimpleName");
                b1.VarName("fname");
                b1.Quantifier("!");
                b1._Variable();
                b1.Resolver();
                b1.Resolver();
                b2._VariableDeclarationFragment();
                b2._VariableDeclarationFragments();
                b2._FieldDeclaration();
                b1._StageUpFragment();
                b0.Path_(2);
                b0.FeatureStep("features");
                b0.Filter_();
                b0.ChildStep();
                b0.And_(2);
                b0.TypeTest("Feature");
                b0.And_(2);
                b0.ExpressionTest_();
                b0.Filter_();
                b0.FeatureStep("type");
                b0.VariableTest("ftype");
                b0._Filter();
                b0._ExpressionTest();
                b0.ExpressionTest_();
                b0.Filter_();
                b0.FeatureStep("name");
                b0.VariableTest("fname");
                b0._Filter();
                b0._ExpressionTest();
                b0._And();
                b0._And();
                b0._Filter();
                b0._Path();
                b1.Resolver();
                b0.TemplateNames();
                b0._Select();
                b1._StageDownFragment();
                b2.FieldDeclaration_();
                b1.Resolver();
                b2.ExtendedModifiers_(1);
                b2.Modifier("private");
                b2._ExtendedModifiers();
                b2.PrimitiveType("int");
                b2.VariableDeclarationFragments_(1);
                b2.VariableDeclarationFragment_();
                b2.SimpleName("anotherField");
                b1.Resolver();
                b1.Resolver();
                b2._VariableDeclarationFragment();
                b2._VariableDeclarationFragments();
                b2._FieldDeclaration();
                b2._BodyDeclarations();
                b2._ClassDeclaration();
                b1._StageUpFragment();
                b0.Path_(2);
                b0.FeatureStep("declarations");
                b0.Filter_();
                b0.ChildStep();
                b0.And_(2);
                b0.TypeTest("SimpleEntity");
                b0.ExpressionTest_();
                b0.Filter_();
                b0.FeatureStep("name");
                b0.VariableTest("ename");
                b0._Filter();
                b0._ExpressionTest();
                b0._And();
                b0._Filter();
                b0._Path();
                b1.Resolver();
                b0.TemplateNames();
                b0._Select();
            }
        };
    }

    public ITemplateFactory<IEntity> newSelectTemplateWithNestedEmptyQuery() {
        return new AbstractTemplateFactory<IEntity>() {

            public void apply(org.whole.lang.builders.IBuilderOperation op) {
                org.whole.lang.queries.builders.IQueriesBuilder b0 = (org.whole.lang.queries.builders.IQueriesBuilder) op.wGetBuilder(org.whole.lang.queries.reflect.QueriesLanguageKit.URI);
                b0.Select_();
                org.whole.lang.commons.builders.ICommonsBuilder b1 = (org.whole.lang.commons.builders.ICommonsBuilder) op.wGetBuilder(org.whole.lang.commons.reflect.CommonsLanguageKit.URI);
                b1.StageUpFragment_();
                org.whole.lang.java.builders.IJavaBuilder b2 = (org.whole.lang.java.builders.IJavaBuilder) op.wGetBuilder(org.whole.lang.java.reflect.JavaLanguageKit.URI);
                b2.ClassDeclaration_();
                b1.Resolver();
                b1.Resolver();
                b1.Variable_();
                b1.VarType("http://lang.whole.org/Java#SimpleName");
                b1.VarName("ename");
                b1.Quantifier("!");
                b1._Variable();
                b1.Resolver();
                b1.Resolver();
                b1.Resolver();
                b2.BodyDeclarations_(3);
                b2.FieldDeclaration_();
                b1.Resolver();
                b2.ExtendedModifiers_(1);
                b2.Modifier("private");
                b2._ExtendedModifiers();
                b2.PrimitiveType("int");
                b2.VariableDeclarationFragments_(1);
                b2.VariableDeclarationFragment_();
                b2.SimpleName("aField");
                b1.Resolver();
                b1.Resolver();
                b2._VariableDeclarationFragment();
                b2._VariableDeclarationFragments();
                b2._FieldDeclaration();
                b1.StageDownFragment_();
                b0.Select_();
                b1.StageUpFragment_();
                b2.FieldDeclaration_();
                b1.Resolver();
                b2.ExtendedModifiers_(1);
                b2.Modifier("private");
                b2._ExtendedModifiers();
                b1.Variable_();
                b1.VarType("http://lang.whole.org/Java#SimpleType");
                b1.VarName("ftype");
                b1.Quantifier("!");
                b1._Variable();
                b2.VariableDeclarationFragments_(1);
                b2.VariableDeclarationFragment_();
                b1.Variable_();
                b1.VarType("http://lang.whole.org/Java#SimpleName");
                b1.VarName("fname");
                b1.Quantifier("!");
                b1._Variable();
                b1.Resolver();
                b1.Resolver();
                b2._VariableDeclarationFragment();
                b2._VariableDeclarationFragments();
                b2._FieldDeclaration();
                b1._StageUpFragment();
                b0.Path_(2);
                b0.FeatureStep("features");
                b0.Filter_();
                b0.ChildStep();
                b0.IndexTest_();
                b0.IntLiteral(999);
                b0._IndexTest();
                b0._Filter();
                b0._Path();
                b1.Resolver();
                b1.Resolver();
                b0._Select();
                b1._StageDownFragment();
                b2.FieldDeclaration_();
                b1.Resolver();
                b2.ExtendedModifiers_(1);
                b2.Modifier("private");
                b2._ExtendedModifiers();
                b2.PrimitiveType("int");
                b2.VariableDeclarationFragments_(1);
                b2.VariableDeclarationFragment_();
                b2.SimpleName("anotherField");
                b1.Resolver();
                b1.Resolver();
                b2._VariableDeclarationFragment();
                b2._VariableDeclarationFragments();
                b2._FieldDeclaration();
                b2._BodyDeclarations();
                b2._ClassDeclaration();
                b1._StageUpFragment();
                b0.Path_(2);
                b0.FeatureStep("declarations");
                b0.Filter_();
                b0.ChildStep();
                b0.And_(2);
                b0.TypeTest("SimpleEntity");
                b0.ExpressionTest_();
                b0.Filter_();
                b0.FeatureStep("name");
                b0.VariableTest("ename");
                b0._Filter();
                b0._ExpressionTest();
                b0._And();
                b0._Filter();
                b0._Path();
                b1.Resolver();
                b1.Resolver();
                b0._Select();
            }
        };
    }

    public ITemplateFactory<IEntity> newSelectTemplateWithJavaHelpers() {
        return new AbstractTemplateFactory<IEntity>() {

            public void apply(org.whole.lang.builders.IBuilderOperation op) {
                org.whole.lang.queries.builders.IQueriesBuilder b0 = (org.whole.lang.queries.builders.IQueriesBuilder) op.wGetBuilder(org.whole.lang.queries.reflect.QueriesLanguageKit.URI);
                b0.Select_();
                org.whole.lang.commons.builders.ICommonsBuilder b1 = (org.whole.lang.commons.builders.ICommonsBuilder) op.wGetBuilder(org.whole.lang.commons.reflect.CommonsLanguageKit.URI);
                b1.StageUpFragment_();
                org.whole.lang.java.builders.IJavaBuilder b2 = (org.whole.lang.java.builders.IJavaBuilder) op.wGetBuilder(org.whole.lang.java.reflect.JavaLanguageKit.URI);
                b2.ClassDeclaration_();
                b1.Resolver();
                b1.Resolver();
                b1.StageDownFragment_();
                b2.InfixExpression_();
                b2.MethodInvocation_();
                b2.SimpleName("org.whole.lang.util.StringUtils");
                b2.Types_(0);
                b2._Types();
                b2.SimpleName("toUpperCap");
                b2.Arguments_(1);
                b2.SimpleName("ename");
                b2._Arguments();
                b2._MethodInvocation();
                b2.InfixOperator("+");
                b2.StringLiteral("Impl");
                b1.Resolver();
                b2._InfixExpression();
                b1._StageDownFragment();
                b1.Resolver();
                b1.Resolver();
                b1.Resolver();
                b2.BodyDeclarations_(1);
                b1.StageDownFragment_();
                b0.Select_();
                b1.StageUpFragment_();
                b2.FieldDeclaration_();
                b1.Resolver();
                b2.ExtendedModifiers_(1);
                b2.Modifier("private");
                b2._ExtendedModifiers();
                b1.StageDownFragment_();
                b2.MethodInvocation_();
                b2.SimpleName("org.whole.lang.util.StringUtils");
                b2.Types_(0);
                b2._Types();
                b2.SimpleName("toUpperCap");
                b2.Arguments_(1);
                b2.SimpleName("ftype");
                b2._Arguments();
                b2._MethodInvocation();
                b1._StageDownFragment();
                b2.VariableDeclarationFragments_(1);
                b2.VariableDeclarationFragment_();
                b1.StageDownFragment_();
                b2.MethodInvocation_();
                b2.SimpleName("org.whole.lang.util.StringUtils");
                b2.Types_(0);
                b2._Types();
                b2.SimpleName("toLowerCap");
                b2.Arguments_(1);
                b2.SimpleName("fname");
                b2._Arguments();
                b2._MethodInvocation();
                b1._StageDownFragment();
                b1.Resolver();
                b1.Resolver();
                b2._VariableDeclarationFragment();
                b2._VariableDeclarationFragments();
                b2._FieldDeclaration();
                b1._StageUpFragment();
                b0.Path_(2);
                b0.FeatureStep("features");
                b0.Filter_();
                b0.ChildStep();
                b0.And_(2);
                b0.TypeTest("Feature");
                b0.And_(2);
                b0.ExpressionTest_();
                b0.Filter_();
                b0.FeatureStep("type");
                b0.VariableTest("ftype");
                b0._Filter();
                b0._ExpressionTest();
                b0.ExpressionTest_();
                b0.Filter_();
                b0.FeatureStep("name");
                b0.VariableTest("fname");
                b0._Filter();
                b0._ExpressionTest();
                b0._And();
                b0._And();
                b0._Filter();
                b0._Path();
                b1.Resolver();
                b0.TemplateNames();
                b0._Select();
                b1._StageDownFragment();
                b2._BodyDeclarations();
                b2._ClassDeclaration();
                b1._StageUpFragment();
                b0.Path_(2);
                b0.FeatureStep("declarations");
                b0.Filter_();
                b0.ChildStep();
                b0.And_(2);
                b0.TypeTest("SimpleEntity");
                b0.ExpressionTest_();
                b0.Filter_();
                b0.FeatureStep("name");
                b0.VariableTest("ename");
                b0._Filter();
                b0._ExpressionTest();
                b0._And();
                b0._Filter();
                b0._Path();
                b1.Resolver();
                b0.TemplateNames();
                b0._Select();
            }
        };
    }

    public ITemplateFactory<IEntity> newSelectTemplateWithFreeVariable() {
        return new AbstractTemplateFactory<IEntity>() {

            public void apply(org.whole.lang.builders.IBuilderOperation op) {
                org.whole.lang.queries.builders.IQueriesBuilder b0 = (org.whole.lang.queries.builders.IQueriesBuilder) op.wGetBuilder(org.whole.lang.queries.reflect.QueriesLanguageKit.URI);
                b0.Select_();
                org.whole.lang.commons.builders.ICommonsBuilder b1 = (org.whole.lang.commons.builders.ICommonsBuilder) op.wGetBuilder(org.whole.lang.commons.reflect.CommonsLanguageKit.URI);
                b1.StageUpFragment_();
                org.whole.lang.java.builders.IJavaBuilder b2 = (org.whole.lang.java.builders.IJavaBuilder) op.wGetBuilder(org.whole.lang.java.reflect.JavaLanguageKit.URI);
                b2.ClassDeclaration_();
                b1.Resolver();
                b1.Resolver();
                b1.Variable_();
                b1.VarType("http://lang.whole.org/Java#SimpleName");
                b1.VarName("freeVariable");
                b1.Quantifier("!");
                b1._Variable();
                b1.Resolver();
                b1.Resolver();
                b1.Resolver();
                b2.BodyDeclarations_(1);
                b1.StageDownFragment_();
                b0.Select_();
                b1.StageUpFragment_();
                b2.FieldDeclaration_();
                b1.Resolver();
                b2.ExtendedModifiers_(1);
                b2.Modifier("private");
                b2._ExtendedModifiers();
                b1.Variable_();
                b1.VarType("http://lang.whole.org/Java#SimpleType");
                b1.VarName("ftype");
                b1.Quantifier("!");
                b1._Variable();
                b2.VariableDeclarationFragments_(1);
                b2.VariableDeclarationFragment_();
                b1.Variable_();
                b1.VarType("http://lang.whole.org/Java#SimpleName");
                b1.VarName("fname");
                b1.Quantifier("!");
                b1._Variable();
                b1.Resolver();
                b1.Resolver();
                b2._VariableDeclarationFragment();
                b2._VariableDeclarationFragments();
                b2._FieldDeclaration();
                b1._StageUpFragment();
                b0.Path_(2);
                b0.FeatureStep("features");
                b0.Filter_();
                b0.ChildStep();
                b0.And_(2);
                b0.TypeTest("Feature");
                b0.And_(2);
                b0.ExpressionTest_();
                b0.Filter_();
                b0.FeatureStep("type");
                b0.VariableTest("ftype");
                b0._Filter();
                b0._ExpressionTest();
                b0.ExpressionTest_();
                b0.Filter_();
                b0.FeatureStep("name");
                b0.VariableTest("fname");
                b0._Filter();
                b0._ExpressionTest();
                b0._And();
                b0._And();
                b0._Filter();
                b0._Path();
                b1.Resolver();
                b0.TemplateNames();
                b0._Select();
                b1._StageDownFragment();
                b2._BodyDeclarations();
                b2._ClassDeclaration();
                b1._StageUpFragment();
                b0.Path_(2);
                b0.FeatureStep("declarations");
                b0.Filter_();
                b0.ChildStep();
                b0.TypeTest("SimpleEntity");
                b0._Filter();
                b0._Path();
                b1.Resolver();
                b0.RemoveNames_();
                b0.TemplateNames();
                b0.Names_(1);
                b0.Name("freeVariable");
                b0._Names();
                b0._RemoveNames();
                b0._Select();
            }
        };
    }

    public ITemplateFactory<IEntity> newSelectTemplateWithTwoNestedSimpleQueries() {
        return new AbstractTemplateFactory<IEntity>() {

            public void apply(org.whole.lang.builders.IBuilderOperation op) {
                org.whole.lang.queries.builders.IQueriesBuilder b0 = (org.whole.lang.queries.builders.IQueriesBuilder) op.wGetBuilder(org.whole.lang.queries.reflect.QueriesLanguageKit.URI);
                b0.Select_();
                org.whole.lang.commons.builders.ICommonsBuilder b1 = (org.whole.lang.commons.builders.ICommonsBuilder) op.wGetBuilder(org.whole.lang.commons.reflect.CommonsLanguageKit.URI);
                b1.StageUpFragment_();
                org.whole.lang.models.builders.IModelsBuilder b2 = (org.whole.lang.models.builders.IModelsBuilder) op.wGetBuilder(org.whole.lang.models.reflect.ModelsLanguageKit.URI);
                b2.Feature_();
                b2.FeatureModifiers_(0);
                b2._FeatureModifiers();
                b1.StageDownFragment_();
                b0.FeatureStep("rule");
                b1._StageDownFragment();
                b1.StageDownFragment_();
                b0.FeatureStep("name");
                b1._StageDownFragment();
                b1.Resolver();
                b2._Feature();
                b1._StageUpFragment();
                b0.Path_(3);
                b0.FeatureStep("phraseStructure");
                b0.Filter_();
                b0.ChildStep();
                b0.TypeTest("Production");
                b0._Filter();
                b0.Filter_();
                b0.DescendantOrSelfStep();
                b0.And_(2);
                b0.TypeTest("As");
                b0.ExpressionTest_();
                b0.Filter_();
                b0.FeatureStep("rule");
                b0.TypeTest("NonTerminal");
                b0._Filter();
                b0._ExpressionTest();
                b0._And();
                b0._Filter();
                b0._Path();
                b1.Resolver();
                b1.Resolver();
                b0._Select();
            }
        };
    }

    public ITemplateFactory<IEntity> newSelectTemplateWithTwoNestedSelectQueries() {
        return new AbstractTemplateFactory<IEntity>() {

            public void apply(org.whole.lang.builders.IBuilderOperation op) {
                org.whole.lang.queries.builders.IQueriesBuilder b0 = (org.whole.lang.queries.builders.IQueriesBuilder) op.wGetBuilder(org.whole.lang.queries.reflect.QueriesLanguageKit.URI);
                b0.Select_();
                org.whole.lang.commons.builders.ICommonsBuilder b1 = (org.whole.lang.commons.builders.ICommonsBuilder) op.wGetBuilder(org.whole.lang.commons.reflect.CommonsLanguageKit.URI);
                b1.StageUpFragment_();
                org.whole.lang.java.builders.IJavaBuilder b2 = (org.whole.lang.java.builders.IJavaBuilder) op.wGetBuilder(org.whole.lang.java.reflect.JavaLanguageKit.URI);
                b2.ClassDeclaration_();
                b1.Resolver();
                b1.Resolver();
                b2.SimpleName("MyClass");
                b1.Resolver();
                b1.Resolver();
                b1.Resolver();
                b2.BodyDeclarations_(2);
                b1.StageDownFragment_();
                b0.Select_();
                b1.StageUpFragment_();
                b2.FieldDeclaration_();
                b1.Resolver();
                b2.ExtendedModifiers_(1);
                b2.Modifier("private");
                b2._ExtendedModifiers();
                b1.Variable_();
                b1.VarType("http://lang.whole.org/Java#SimpleType");
                b1.VarName("type");
                b1.Quantifier("!");
                b1._Variable();
                b2.VariableDeclarationFragments_(1);
                b2.VariableDeclarationFragment_();
                b1.Variable_();
                b1.VarType("http://lang.whole.org/Java#SimpleName");
                b1.VarName("name");
                b1.Quantifier("!");
                b1._Variable();
                b1.Resolver();
                b1.Resolver();
                b2._VariableDeclarationFragment();
                b2._VariableDeclarationFragments();
                b2._FieldDeclaration();
                b1._StageUpFragment();
                b0.Path_(2);
                b0.FeatureStep("features");
                b0.Filter_();
                b0.ChildStep();
                b0.And_(2);
                b0.TypeTest("Feature");
                b0.And_(2);
                b0.ExpressionTest_();
                b0.Filter_();
                b0.FeatureStep("type");
                b0.VariableTest("type");
                b0._Filter();
                b0._ExpressionTest();
                b0.ExpressionTest_();
                b0.Filter_();
                b0.FeatureStep("name");
                b0.VariableTest("name");
                b0._Filter();
                b0._ExpressionTest();
                b0._And();
                b0._And();
                b0._Filter();
                b0._Path();
                b1.Resolver();
                b0.TemplateNames();
                b0._Select();
                b1._StageDownFragment();
                b2.MethodDeclaration_();
                b1.Resolver();
                b2.ExtendedModifiers_(1);
                b2.Modifier("public");
                b2._ExtendedModifiers();
                b1.Resolver();
                b2.PrimitiveType("void");
                b2.SimpleName("execute");
                b2.Parameters_(0);
                b2._Parameters();
                b1.Resolver();
                b2.Names_(0);
                b2._Names();
                b2.Block_(1);
                b1.StageDownFragment_();
                b0.Select_();
                b1.StageUpFragment_();
                b2.VariableDeclarationStatement_();
                b1.Resolver();
                b1.Variable_();
                b1.VarType("http://lang.whole.org/Java#Type");
                b1.VarName("type");
                b1.Quantifier("!");
                b1._Variable();
                b2.VariableDeclarationFragments_(1);
                b2.VariableDeclarationFragment_();
                b1.Variable_();
                b1.VarType("http://lang.whole.org/Java#SimpleName");
                b1.VarName("name");
                b1.Quantifier("!");
                b1._Variable();
                b1.Resolver();
                b1.Resolver();
                b2._VariableDeclarationFragment();
                b2._VariableDeclarationFragments();
                b2._VariableDeclarationStatement();
                b1._StageUpFragment();
                b0.Path_(2);
                b0.FeatureStep("features");
                b0.Filter_();
                b0.ChildStep();
                b0.And_(2);
                b0.TypeTest("Feature");
                b0.And_(2);
                b0.ExpressionTest_();
                b0.Filter_();
                b0.FeatureStep("type");
                b0.VariableTest("type");
                b0._Filter();
                b0._ExpressionTest();
                b0.ExpressionTest_();
                b0.Filter_();
                b0.FeatureStep("name");
                b0.VariableTest("name");
                b0._Filter();
                b0._ExpressionTest();
                b0._And();
                b0._And();
                b0._Filter();
                b0._Path();
                b1.Resolver();
                b0.TemplateNames();
                b0._Select();
                b1._StageDownFragment();
                b2._Block();
                b2._MethodDeclaration();
                b2._BodyDeclarations();
                b2._ClassDeclaration();
                b1._StageUpFragment();
                b0.Path_(2);
                b0.FeatureStep("declarations");
                b0.Filter_();
                b0.ChildStep();
                b0.TypeTest("SimpleEntity");
                b0._Filter();
                b0._Path();
                b1.Resolver();
                b1.Resolver();
                b0._Select();
            }
        };
    }

    public ITemplateFactory<IEntity> newSelectHelperResultAs() {
        return new AbstractTemplateFactory<IEntity>() {

            public void apply(org.whole.lang.builders.IBuilderOperation op) {
                org.whole.lang.queries.builders.IQueriesBuilder b0 = (org.whole.lang.queries.builders.IQueriesBuilder) op.wGetBuilder(org.whole.lang.queries.reflect.QueriesLanguageKit.URI);
                b0.Select_();
                b0.Tuple_(2);
                b0.Filter_();
                org.whole.lang.commons.builders.ICommonsBuilder b1 = (org.whole.lang.commons.builders.ICommonsBuilder) op.wGetBuilder(org.whole.lang.commons.reflect.CommonsLanguageKit.URI);
                b1.SameStageFragment_();
                org.whole.lang.java.builders.IJavaBuilder b2 = (org.whole.lang.java.builders.IJavaBuilder) op.wGetBuilder(org.whole.lang.java.reflect.JavaLanguageKit.URI);
                b2.MethodInvocation_();
                b2.SimpleName("org.whole.lang.util.StringUtils");
                b1.Resolver();
                b2.SimpleName("toUpperCap");
                b2.Arguments_(1);
                b2.SimpleName("entityName");
                b2._Arguments();
                b2._MethodInvocation();
                b1._SameStageFragment();
                b0.VariableTest("className");
                b0._Filter();
                b0.SelfStep();
                b0._Tuple();
                b0.Path_(1);
                b0.Filter_();
                b0.DescendantStep();
                b0.And_(2);
                b0.TypeTest("SimpleEntity");
                b0.ExpressionTest_();
                b0.Filter_();
                b0.FeatureStep("name");
                b0.VariableTest("entityName");
                b0._Filter();
                b0._ExpressionTest();
                b0._And();
                b0._Filter();
                b0._Path();
                b1.Resolver();
                b1.Resolver();
                b0._Select();
            }
        };
    }

    public ITemplateFactory<IEntity> newSelectTemplateFromPattern() {
        return new AbstractTemplateFactory<IEntity>() {

            public void apply(org.whole.lang.builders.IBuilderOperation op) {
                org.whole.lang.queries.builders.IQueriesBuilder b0 = (org.whole.lang.queries.builders.IQueriesBuilder) op.wGetBuilder(org.whole.lang.queries.reflect.QueriesLanguageKit.URI);
                b0.Select_();
                org.whole.lang.commons.builders.ICommonsBuilder b1 = (org.whole.lang.commons.builders.ICommonsBuilder) op.wGetBuilder(org.whole.lang.commons.reflect.CommonsLanguageKit.URI);
                b1.StageUpFragment_();
                org.whole.lang.java.builders.IJavaBuilder b2 = (org.whole.lang.java.builders.IJavaBuilder) op.wGetBuilder(org.whole.lang.java.reflect.JavaLanguageKit.URI);
                b2.IfStatement_();
                b1.Variable_();
                b1.VarType("http://lang.whole.org/Java#Expression");
                b1.VarName("exp");
                b1.Quantifier("!");
                b1._Variable();
                b1.Variable_();
                b1.VarType("http://lang.whole.org/Java#Statement");
                b1.VarName("falseBody");
                b1.Quantifier("!");
                b1._Variable();
                b1.Variable_();
                b1.VarType("http://lang.whole.org/Java#Statement");
                b1.VarName("trueBody");
                b1.Quantifier("!");
                b1._Variable();
                b2._IfStatement();
                b1._StageUpFragment();
                b1.StageUpFragment_();
                b2.IfStatement_();
                b1.Variable_();
                b1.VarType("http://lang.whole.org/Java#Expression");
                b1.VarName("exp");
                b1.Quantifier("!");
                b1._Variable();
                b1.Variable_();
                b1.VarType("http://lang.whole.org/Java#Statement");
                b1.VarName("trueBody");
                b1.Quantifier("!");
                b1._Variable();
                b1.Variable_();
                b1.VarType("http://lang.whole.org/Java#Statement");
                b1.VarName("falseBody");
                b1.Quantifier("!");
                b1._Variable();
                b2._IfStatement();
                b1._StageUpFragment();
                b1.Resolver();
                b0.TemplateNames();
                b0._Select();
            }
        };
    }

    public ITemplateFactory<IEntity> newSelectTemplateFromPathWithPattern() {
        return new AbstractTemplateFactory<IEntity>() {

            public void apply(org.whole.lang.builders.IBuilderOperation op) {
                org.whole.lang.queries.builders.IQueriesBuilder b0 = (org.whole.lang.queries.builders.IQueriesBuilder) op.wGetBuilder(org.whole.lang.queries.reflect.QueriesLanguageKit.URI);
                b0.Select_();
                org.whole.lang.commons.builders.ICommonsBuilder b1 = (org.whole.lang.commons.builders.ICommonsBuilder) op.wGetBuilder(org.whole.lang.commons.reflect.CommonsLanguageKit.URI);
                b1.StageUpFragment_();
                org.whole.lang.java.builders.IJavaBuilder b2 = (org.whole.lang.java.builders.IJavaBuilder) op.wGetBuilder(org.whole.lang.java.reflect.JavaLanguageKit.URI);
                b2.FieldDeclaration_();
                b1.Resolver();
                b2.ExtendedModifiers_(1);
                b2.Modifier("private");
                b2._ExtendedModifiers();
                b1.Variable_();
                b1.VarType("http://lang.whole.org/Java#SimpleType");
                b1.VarName("ftype");
                b1.Quantifier("!");
                b1._Variable();
                b2.VariableDeclarationFragments_(1);
                b2.VariableDeclarationFragment_();
                b1.Variable_();
                b1.VarType("http://lang.whole.org/Java#SimpleName");
                b1.VarName("fname");
                b1.Quantifier("!");
                b1._Variable();
                b1.Resolver();
                b1.Resolver();
                b2._VariableDeclarationFragment();
                b2._VariableDeclarationFragments();
                b2._FieldDeclaration();
                b1._StageUpFragment();
                b0.Path_(2);
                b0.DescendantOrSelfStep();
                b1.StageUpFragment_();
                org.whole.lang.models.builders.IModelsBuilder b3 = (org.whole.lang.models.builders.IModelsBuilder) op.wGetBuilder(org.whole.lang.models.reflect.ModelsLanguageKit.URI);
                b3.Feature_();
                b1.Variable_();
                b1.VarType("http://lang.whole.org/Models#FeatureModifiers");
                b1.VarName("_");
                b1.Quantifier("!");
                b1._Variable();
                b1.Variable_();
                b1.VarType("http://lang.whole.org/Models#SimpleName");
                b1.VarName("ftype");
                b1.Quantifier("!");
                b1._Variable();
                b1.Variable_();
                b1.VarType("http://lang.whole.org/Models#SimpleName");
                b1.VarName("fname");
                b1.Quantifier("!");
                b1._Variable();
                b1.Resolver();
                b3._Feature();
                b1._StageUpFragment();
                b0._Path();
                b1.Resolver();
                b0.TemplateNames();
                b0._Select();
            }
        };
    }

    public ITemplateFactory<IEntity> newSelectTemplateFromPatternWithWhere() {
        return new AbstractTemplateFactory<IEntity>() {

            public void apply(org.whole.lang.builders.IBuilderOperation op) {
                org.whole.lang.queries.builders.IQueriesBuilder b0 = (org.whole.lang.queries.builders.IQueriesBuilder) op.wGetBuilder(org.whole.lang.queries.reflect.QueriesLanguageKit.URI);
                b0.Select_();
                org.whole.lang.commons.builders.ICommonsBuilder b1 = (org.whole.lang.commons.builders.ICommonsBuilder) op.wGetBuilder(org.whole.lang.commons.reflect.CommonsLanguageKit.URI);
                b1.StageUpFragment_();
                org.whole.lang.java.builders.IJavaBuilder b2 = (org.whole.lang.java.builders.IJavaBuilder) op.wGetBuilder(org.whole.lang.java.reflect.JavaLanguageKit.URI);
                b2.FieldDeclaration_();
                b1.Resolver();
                b2.ExtendedModifiers_(1);
                b2.Modifier("private");
                b2._ExtendedModifiers();
                b1.Variable_();
                b1.VarType("http://lang.whole.org/Java#SimpleType");
                b1.VarName("jtype");
                b1.Quantifier("!");
                b1._Variable();
                b2.VariableDeclarationFragments_(1);
                b2.VariableDeclarationFragment_();
                b1.Variable_();
                b1.VarType("http://lang.whole.org/Java#SimpleName");
                b1.VarName("fname");
                b1.Quantifier("!");
                b1._Variable();
                b1.Resolver();
                b1.Resolver();
                b2._VariableDeclarationFragment();
                b2._VariableDeclarationFragments();
                b2._FieldDeclaration();
                b1._StageUpFragment();
                b1.StageUpFragment_();
                org.whole.lang.models.builders.IModelsBuilder b3 = (org.whole.lang.models.builders.IModelsBuilder) op.wGetBuilder(org.whole.lang.models.reflect.ModelsLanguageKit.URI);
                b3.Feature_();
                b1.Variable_();
                b1.VarType("http://lang.whole.org/Models#FeatureModifiers");
                b1.VarName("_");
                b1.Quantifier("!");
                b1._Variable();
                b1.Variable_();
                b1.VarType("http://lang.whole.org/Models#SimpleName");
                b1.VarName("ftype");
                b1.Quantifier("!");
                b1._Variable();
                b1.Variable_();
                b1.VarType("http://lang.whole.org/Models#SimpleName");
                b1.VarName("fname");
                b1.Quantifier("!");
                b1._Variable();
                b1.Resolver();
                b3._Feature();
                b1._StageUpFragment();
                b0.Filter_();
                b1.SameStageFragment_();
                b2.MethodInvocation_();
                b2.SimpleName("org.whole.lang.util.StringUtils");
                b1.Resolver();
                b2.SimpleName("toUpperCap");
                b2.Arguments_(1);
                b2.SimpleName("ftype");
                b2._Arguments();
                b2._MethodInvocation();
                b1._SameStageFragment();
                b0.VariableTest("jtype");
                b0._Filter();
                b0.TemplateNames();
                b0._Select();
            }
        };
    }

    public ITemplateFactory<IEntity> newSelectTemplateAs() {
        return new AbstractTemplateFactory<IEntity>() {

            public void apply(org.whole.lang.builders.IBuilderOperation op) {
                org.whole.lang.queries.builders.IQueriesBuilder b0 = (org.whole.lang.queries.builders.IQueriesBuilder) op.wGetBuilder(org.whole.lang.queries.reflect.QueriesLanguageKit.URI);
                b0.Select_();
                b0.Tuple_(2);
                b0.Filter_();
                org.whole.lang.commons.builders.ICommonsBuilder b1 = (org.whole.lang.commons.builders.ICommonsBuilder) op.wGetBuilder(org.whole.lang.commons.reflect.CommonsLanguageKit.URI);
                b1.StageUpFragment_();
                org.whole.lang.java.builders.IJavaBuilder b2 = (org.whole.lang.java.builders.IJavaBuilder) op.wGetBuilder(org.whole.lang.java.reflect.JavaLanguageKit.URI);
                b2.FieldDeclaration_();
                b1.Resolver();
                b2.ExtendedModifiers_(1);
                b2.Modifier("private");
                b2._ExtendedModifiers();
                b1.Variable_();
                b1.VarType("http://lang.whole.org/Java#Type");
                b1.VarName("ptype");
                b1.Quantifier("!");
                b1._Variable();
                b2.VariableDeclarationFragments_(1);
                b2.VariableDeclarationFragment_();
                b1.Variable_();
                b1.VarType("http://lang.whole.org/Java#SimpleName");
                b1.VarName("pname");
                b1.Quantifier("!");
                b1._Variable();
                b2.ExtraDimensions(0);
                b1.Resolver();
                b2._VariableDeclarationFragment();
                b2._VariableDeclarationFragments();
                b2._FieldDeclaration();
                b1._StageUpFragment();
                b0.VariableTest("field");
                b0._Filter();
                b0.SelfStep();
                b0._Tuple();
                b0.Path_(1);
                b0.Filter_();
                b0.DescendantStep();
                b0.And_(2);
                b0.TypeTest("Feature");
                b0.And_(2);
                b0.ExpressionTest_();
                b0.Filter_();
                b0.FeatureStep("name");
                b0.VariableTest("pname");
                b0._Filter();
                b0._ExpressionTest();
                b0.ExpressionTest_();
                b0.Filter_();
                b0.FeatureStep("type");
                b0.VariableTest("ptype");
                b0._Filter();
                b0._ExpressionTest();
                b0._And();
                b0._And();
                b0._Filter();
                b0._Path();
                b1.Resolver();
                b0.TemplateNames();
                b0._Select();
            }
        };
    }

    public ITemplateFactory<IEntity> newSelectTupleOfTemplatesAs() {
        return new AbstractTemplateFactory<IEntity>() {

            public void apply(org.whole.lang.builders.IBuilderOperation op) {
                org.whole.lang.queries.builders.IQueriesBuilder b0 = (org.whole.lang.queries.builders.IQueriesBuilder) op.wGetBuilder(org.whole.lang.queries.reflect.QueriesLanguageKit.URI);
                b0.Select_();
                b0.Tuple_(4);
                b0.Filter_();
                org.whole.lang.commons.builders.ICommonsBuilder b1 = (org.whole.lang.commons.builders.ICommonsBuilder) op.wGetBuilder(org.whole.lang.commons.reflect.CommonsLanguageKit.URI);
                b1.StageUpFragment_();
                org.whole.lang.java.builders.IJavaBuilder b2 = (org.whole.lang.java.builders.IJavaBuilder) op.wGetBuilder(org.whole.lang.java.reflect.JavaLanguageKit.URI);
                b2.FieldDeclaration_();
                b1.Resolver();
                b2.ExtendedModifiers_(1);
                b2.Modifier("private");
                b2._ExtendedModifiers();
                b1.Variable_();
                b1.VarType("http://lang.whole.org/Java#Type");
                b1.VarName("ptype");
                b1.Quantifier("!");
                b1._Variable();
                b2.VariableDeclarationFragments_(1);
                b2.VariableDeclarationFragment_();
                b1.Variable_();
                b1.VarType("http://lang.whole.org/Java#SimpleName");
                b1.VarName("pname");
                b1.Quantifier("!");
                b1._Variable();
                b2.ExtraDimensions(0);
                b1.Resolver();
                b2._VariableDeclarationFragment();
                b2._VariableDeclarationFragments();
                b2._FieldDeclaration();
                b1._StageUpFragment();
                b0.VariableTest("field");
                b0._Filter();
                b0.Filter_();
                b1.StageUpFragment_();
                b2.SingleVariableDeclaration_();
                b1.Resolver();
                b1.Variable_();
                b1.VarType("http://lang.whole.org/Java#Type");
                b1.VarName("ptype");
                b1.Quantifier("!");
                b1._Variable();
                b2.Varargs(false);
                b1.Variable_();
                b1.VarType("http://lang.whole.org/Java#SimpleName");
                b1.VarName("pname");
                b1.Quantifier("!");
                b1._Variable();
                b2.ExtraDimensions(0);
                b1.Resolver();
                b2._SingleVariableDeclaration();
                b1._StageUpFragment();
                b0.VariableTest("param");
                b0._Filter();
                b0.Filter_();
                b1.StageUpFragment_();
                b2.ExpressionStatement_();
                b2.Assignment_();
                b2.FieldAccess_();
                b2.ThisExpression_();
                b1.Resolver();
                b2._ThisExpression();
                b1.Variable_();
                b1.VarType("http://lang.whole.org/Java#SimpleName");
                b1.VarName("pname");
                b1.Quantifier("!");
                b1._Variable();
                b2._FieldAccess();
                b2.AssignmentOperator("=");
                b1.Variable_();
                b1.VarType("http://lang.whole.org/Java#SimpleName");
                b1.VarName("pname");
                b1.Quantifier("!");
                b1._Variable();
                b2._Assignment();
                b2._ExpressionStatement();
                b1._StageUpFragment();
                b0.VariableTest("init");
                b0._Filter();
                b0.SelfStep();
                b0._Tuple();
                b0.Path_(1);
                b0.Filter_();
                b0.DescendantStep();
                b0.And_(2);
                b0.TypeTest("Feature");
                b0.And_(2);
                b0.ExpressionTest_();
                b0.Filter_();
                b0.FeatureStep("name");
                b0.VariableTest("pname");
                b0._Filter();
                b0._ExpressionTest();
                b0.ExpressionTest_();
                b0.Filter_();
                b0.FeatureStep("type");
                b0.VariableTest("ptype");
                b0._Filter();
                b0._ExpressionTest();
                b0._And();
                b0._And();
                b0._Filter();
                b0._Path();
                b1.Resolver();
                b0.TemplateNames();
                b0._Select();
            }
        };
    }

    public ITemplateFactory<IEntity> newSelectTemplateFromWhere() {
        return new AbstractTemplateFactory<IEntity>() {

            public void apply(org.whole.lang.builders.IBuilderOperation op) {
                org.whole.lang.queries.builders.IQueriesBuilder b0 = (org.whole.lang.queries.builders.IQueriesBuilder) op.wGetBuilder(org.whole.lang.queries.reflect.QueriesLanguageKit.URI);
                b0.Select_();
                org.whole.lang.commons.builders.ICommonsBuilder b1 = (org.whole.lang.commons.builders.ICommonsBuilder) op.wGetBuilder(org.whole.lang.commons.reflect.CommonsLanguageKit.URI);
                b1.StageUpFragment_();
                org.whole.lang.java.builders.IJavaBuilder b2 = (org.whole.lang.java.builders.IJavaBuilder) op.wGetBuilder(org.whole.lang.java.reflect.JavaLanguageKit.URI);
                b2.ClassDeclaration_();
                b1.Resolver();
                b2.ExtendedModifiers_(1);
                b2.Modifier("public");
                b2._ExtendedModifiers();
                b1.Variable_();
                b1.VarType("http://lang.whole.org/Java#SimpleName");
                b1.VarName("className");
                b1.Quantifier("!");
                b1._Variable();
                b1.Resolver();
                b1.Resolver();
                b1.Resolver();
                b2.BodyDeclarations_(2);
                b1.Variable_();
                b1.VarType("http://lang.whole.org/Java#FieldDeclaration");
                b1.VarName("field");
                b1.Quantifier("*");
                b1._Variable();
                b1.Variable_();
                b1.VarType("http://lang.whole.org/Java#MethodDeclaration");
                b1.VarName("getter");
                b1.Quantifier("*");
                b1._Variable();
                b2._BodyDeclarations();
                b2._ClassDeclaration();
                b1._StageUpFragment();
                b0.Filter_();
                b0.DescendantOrSelfStep();
                b0.And_(2);
                b0.TypeTest("SimpleEntity");
                b0.ExpressionTest_();
                b0.Filter_();
                b0.FeatureStep("name");
                b0.VariableTest("entityName");
                b0._Filter();
                b0._ExpressionTest();
                b0._And();
                b0._Filter();
                b0.Sequence_(2);
                b0.Filter_();
                b1.SameStageFragment_();
                b2.MethodInvocation_();
                b2.SimpleName("org.whole.lang.util.StringUtils");
                b1.Resolver();
                b2.SimpleName("toUpperCap");
                b2.Arguments_(1);
                b2.SimpleName("entityName");
                b2._Arguments();
                b2._MethodInvocation();
                b1._SameStageFragment();
                b0.VariableTest("className");
                b0._Filter();
                b0.Select_();
                b0.Tuple_(2);
                b0.Filter_();
                b1.StageUpFragment_();
                b2.FieldDeclaration_();
                b1.Resolver();
                b2.ExtendedModifiers_(1);
                b2.Modifier("private");
                b2._ExtendedModifiers();
                b1.Variable_();
                b1.VarType("http://lang.whole.org/Java#Type");
                b1.VarName("ptype");
                b1.Quantifier("!");
                b1._Variable();
                b2.VariableDeclarationFragments_(1);
                b2.VariableDeclarationFragment_();
                b1.Variable_();
                b1.VarType("http://lang.whole.org/Java#SimpleName");
                b1.VarName("pname");
                b1.Quantifier("!");
                b1._Variable();
                b2.ExtraDimensions(0);
                b1.Resolver();
                b2._VariableDeclarationFragment();
                b2._VariableDeclarationFragments();
                b2._FieldDeclaration();
                b1._StageUpFragment();
                b0.VariableTest("field");
                b0._Filter();
                b0.Filter_();
                b1.StageUpFragment_();
                b2.MethodDeclaration_();
                b1.Resolver();
                b2.ExtendedModifiers_(1);
                b2.Modifier("public");
                b2._ExtendedModifiers();
                b1.Resolver();
                b1.Variable_();
                b1.VarType("http://lang.whole.org/Java#Type");
                b1.VarName("ptype");
                b1.Quantifier("!");
                b1._Variable();
                b1.StageDownFragment_();
                b2.InfixExpression_();
                b2.StringLiteral("get");
                b2.InfixOperator("+");
                b2.MethodInvocation_();
                b2.SimpleName("org.whole.lang.util.StringUtils");
                b1.Resolver();
                b2.SimpleName("toUpperCap");
                b2.Arguments_(1);
                b2.SimpleName("pname");
                b2._Arguments();
                b2._MethodInvocation();
                b1.Resolver();
                b2._InfixExpression();
                b1._StageDownFragment();
                b2.Parameters_(0);
                b2._Parameters();
                b1.Resolver();
                b1.Resolver();
                b2.Block_(1);
                b2.ReturnStatement_();
                b1.Variable_();
                b1.VarType("http://lang.whole.org/Java#SimpleName");
                b1.VarName("pname");
                b1.Quantifier("!");
                b1._Variable();
                b2._ReturnStatement();
                b2._Block();
                b2._MethodDeclaration();
                b1._StageUpFragment();
                b0.VariableTest("getter");
                b0._Filter();
                b0._Tuple();
                b0.Path_(2);
                b0.FeatureStep("features");
                b0.Filter_();
                b0.ChildStep();
                b0.And_(2);
                b0.ExpressionTest_();
                b0.Filter_();
                b0.FeatureStep("name");
                b0.VariableTest("pname");
                b0._Filter();
                b0._ExpressionTest();
                b0.ExpressionTest_();
                b0.Filter_();
                b0.FeatureStep("type");
                b0.VariableTest("ptype");
                b0._Filter();
                b0._ExpressionTest();
                b0._And();
                b0._Filter();
                b0._Path();
                b1.Resolver();
                b0.TemplateNames();
                b0._Select();
                b0._Sequence();
                b0.TemplateNames();
                b0._Select();
            }
        };
    }

    public ITemplateFactory<IEntity> newSelectVariableScopes() {
        return new AbstractTemplateFactory<IEntity>() {

            public void apply(org.whole.lang.builders.IBuilderOperation op) {
                org.whole.lang.queries.builders.IQueriesBuilder b0 = (org.whole.lang.queries.builders.IQueriesBuilder) op.wGetBuilder(org.whole.lang.queries.reflect.QueriesLanguageKit.URI);
                b0.Select_();
                b0.Tuple_(2);
                org.whole.lang.commons.builders.ICommonsBuilder b1 = (org.whole.lang.commons.builders.ICommonsBuilder) op.wGetBuilder(org.whole.lang.commons.reflect.CommonsLanguageKit.URI);
                b1.StageUpFragment_();
                org.whole.lang.text.builders.ITextBuilder b2 = (org.whole.lang.text.builders.ITextBuilder) op.wGetBuilder(org.whole.lang.text.reflect.TextLanguageKit.URI);
                b2.Document_(5);
                b2.Row_(2);
                b2.Text("oneTime:");
                b1.Variable_();
                b1.VarType("http://lang.whole.org/Text#Text");
                b1.VarName("fromName");
                b1.Quantifier("*");
                b1._Variable();
                b2._Row();
                b2.Row_(2);
                b2.Text("oneTime:");
                b1.Variable_();
                b1.VarType("http://lang.whole.org/Text#Text");
                b1.VarName("oneTime");
                b1.Quantifier("*");
                b1._Variable();
                b2._Row();
                b2.Row_(2);
                b2.Text("featuresTimes:");
                b1.Variable_();
                b1.VarType("http://lang.whole.org/Text#Text");
                b1.VarName("featuresTimes");
                b1.Quantifier("*");
                b1._Variable();
                b2._Row();
                b2.Row_(2);
                b2.Text("featuresTimesInline:");
                b1.InlineVariable_();
                b1.VarType("http://lang.whole.org/Text#Text");
                b1.VarName("featuresTimesInline");
                b1.Quantifier("!");
                b1._InlineVariable();
                b2._Row();
                b2.Row_(2);
                b2.Text("siblingTimes:");
                b1.Variable_();
                b1.VarType("http://lang.whole.org/Text#Text");
                b1.VarName("siblingTimes");
                b1.Quantifier("*");
                b1._Variable();
                b2._Row();
                b2._Document();
                b1._StageUpFragment();
                b0.SelfStep();
                b0._Tuple();
                b0.Filter_();
                b0.DescendantOrSelfStep();
                b0.And_(2);
                b0.TypeTest("SimpleEntity");
                b0.ExpressionTest_();
                b0.Filter_();
                b0.FeatureStep("name");
                b0.VariableTest("fromName");
                b0._Filter();
                b0._ExpressionTest();
                b0._And();
                b0._Filter();
                b0.Sequence_(4);
                b0.Filter_();
                b1.StageUpFragment_();
                b2.Text("oneTimeInWhere");
                b1._StageUpFragment();
                b0.VariableTest("oneTime");
                b0._Filter();
                b0.Select_();
                b0.Filter_();
                b1.StageUpFragment_();
                b2.Text("f");
                b1._StageUpFragment();
                b0.VariableTest("featuresTimes");
                b0._Filter();
                b0.Path_(2);
                b0.FeatureStep("features");
                b0.ChildStep();
                b0._Path();
                b1.Resolver();
                b1.Resolver();
                b0._Select();
                b0.Select_();
                b0.Filter_();
                b1.StageUpFragment_();
                b2.Row_(1);
                b1.Variable_();
                b1.VarType("http://lang.whole.org/Text#Text");
                b1.VarName("fTimes");
                b1.Quantifier("*");
                b1._Variable();
                b2._Row();
                b1._StageUpFragment();
                b0.VariableTest("featuresTimesInline");
                b0._Filter();
                b0.Path_(1);
                b0.SelfStep();
                b0._Path();
                b0.Select_();
                b0.Filter_();
                b1.StageUpFragment_();
                b2.Text("f");
                b1._StageUpFragment();
                b0.VariableTest("fTimes");
                b0._Filter();
                b0.Path_(2);
                b0.FeatureStep("features");
                b0.ChildStep();
                b0._Path();
                b1.Resolver();
                b1.Resolver();
                b0._Select();
                b1.Resolver();
                b0._Select();
                b0.Select_();
                b0.Filter_();
                b1.StageUpFragment_();
                b2.Text("s");
                b1._StageUpFragment();
                b0.VariableTest("siblingTimes");
                b0._Filter();
                b0.Path_(1);
                b0.FollowingSiblingStep();
                b0._Path();
                b1.Resolver();
                b1.Resolver();
                b0._Select();
                b0._Sequence();
                b0.TemplateNames();
                b0._Select();
            }
        };
    }

    public ITemplateFactory<IEntity> newSelectBindingScopes() {
        return new AbstractTemplateFactory<IEntity>() {

            public void apply(org.whole.lang.builders.IBuilderOperation op) {
                org.whole.lang.queries.builders.IQueriesBuilder b0 = (org.whole.lang.queries.builders.IQueriesBuilder) op.wGetBuilder(org.whole.lang.queries.reflect.QueriesLanguageKit.URI);
                b0.Select_();
                b0.Tuple_(2);
                org.whole.lang.commons.builders.ICommonsBuilder b1 = (org.whole.lang.commons.builders.ICommonsBuilder) op.wGetBuilder(org.whole.lang.commons.reflect.CommonsLanguageKit.URI);
                b1.StageUpFragment_();
                org.whole.lang.text.builders.ITextBuilder b2 = (org.whole.lang.text.builders.ITextBuilder) op.wGetBuilder(org.whole.lang.text.reflect.TextLanguageKit.URI);
                b2.Document_(7);
                b2.Row_(2);
                b2.Text("from:");
                b1.Variable_();
                b1.VarType("http://lang.whole.org/Text#Text");
                b1.VarName("fromName");
                b1.Quantifier("!");
                b1._Variable();
                b2._Row();
                b2.Row_(2);
                b2.Text("where1Name:");
                b1.Variable_();
                b1.VarType("http://lang.whole.org/Text#Text");
                b1.VarName("where1Name");
                b1.Quantifier("!");
                b1._Variable();
                b2._Row();
                b2.Row_(2);
                b2.Text("where2Name:");
                b1.Variable_();
                b1.VarType("http://lang.whole.org/Text#Text");
                b1.VarName("where2Name");
                b1.Quantifier("!");
                b1._Variable();
                b2._Row();
                b2.Row_(2);
                b2.Text("where3aName:");
                b1.Variable_();
                b1.VarType("http://lang.whole.org/Text#Text");
                b1.VarName("where3aName");
                b1.Quantifier("*");
                b1._Variable();
                b2._Row();
                b2.Row_(2);
                b2.Text("where3b:");
                b1.Variable_();
                b1.VarType("http://lang.whole.org/Text#Text");
                b1.VarName("where3b");
                b1.Quantifier("*");
                b1._Variable();
                b2._Row();
                b2.Row_(2);
                b2.Text("where3c:");
                b1.Variable_();
                b1.VarType("http://lang.whole.org/Text#Text");
                b1.VarName("where3c");
                b1.Quantifier("*");
                b1._Variable();
                b2._Row();
                b2.Row_(3);
                b2.Text("out of scope:");
                b1.Variable_();
                b1.VarType("http://lang.whole.org/Text#Text");
                b1.VarName("where4Name");
                b1.Quantifier("*");
                b1._Variable();
                b1.Variable_();
                b1.VarType("http://lang.whole.org/Text#Text");
                b1.VarName("featureName");
                b1.Quantifier("*");
                b1._Variable();
                b2._Row();
                b2._Document();
                b1._StageUpFragment();
                b0.Filter_();
                b0.SelfStep();
                b0.ExpressionTest_();
                b0.Filter_();
                b0.FeatureStep("name");
                b0.VariableTest("selectName");
                b0._Filter();
                b0._ExpressionTest();
                b0._Filter();
                b0._Tuple();
                b0.Filter_();
                b0.DescendantOrSelfStep();
                b0.And_(2);
                b0.TypeTest("SimpleEntity");
                b0.ExpressionTest_();
                b0.Filter_();
                b0.FeatureStep("name");
                b0.VariableTest("fromName");
                b0._Filter();
                b0._ExpressionTest();
                b0._And();
                b0._Filter();
                b0.Sequence_(3);
                b0.Filter_();
                b1.SameStageFragment_();
                org.whole.lang.java.builders.IJavaBuilder b3 = (org.whole.lang.java.builders.IJavaBuilder) op.wGetBuilder(org.whole.lang.java.reflect.JavaLanguageKit.URI);
                b3.InfixExpression_();
                b3.SimpleName("fromName");
                b3.InfixOperator("+");
                b3.SimpleName("selectName");
                b1.Resolver();
                b3._InfixExpression();
                b1._SameStageFragment();
                b0.VariableTest("where1Name");
                b0._Filter();
                b0.Filter_();
                b1.SameStageFragment_();
                b3.InfixExpression_();
                b3.InfixExpression_();
                b3.SimpleName("fromName");
                b3.InfixOperator("+");
                b3.SimpleName("selectName");
                b1.Resolver();
                b3._InfixExpression();
                b3.InfixOperator("+");
                b3.SimpleName("where1Name");
                b1.Resolver();
                b3._InfixExpression();
                b1._SameStageFragment();
                b0.VariableTest("where2Name");
                b0._Filter();
                b0.Select_();
                b0.Tuple_(3);
                b0.Filter_();
                b1.SameStageFragment_();
                b3.InfixExpression_();
                b3.InfixExpression_();
                b3.SimpleName("fromName");
                b3.InfixOperator("+");
                b3.SimpleName("selectName");
                b1.Resolver();
                b3._InfixExpression();
                b3.InfixOperator("+");
                b3.InfixExpression_();
                b3.SimpleName("where1Name");
                b3.InfixOperator("+");
                b3.SimpleName("where2Name");
                b1.Resolver();
                b3._InfixExpression();
                b1.Resolver();
                b3._InfixExpression();
                b1._SameStageFragment();
                b0.VariableTest("where3aName");
                b0._Filter();
                b0.Filter_();
                b1.SameStageFragment_();
                b3.MethodInvocation_();
                b3.SimpleName("bindingsTester");
                b1.Resolver();
                b3.SimpleName("assertDef");
                b3.Arguments_(4);
                b3.StringLiteral("fromName");
                b3.StringLiteral("selectName");
                b3.StringLiteral("where1Name");
                b3.StringLiteral("where2Name");
                b3._Arguments();
                b3._MethodInvocation();
                b1._SameStageFragment();
                b0.VariableTest("where3b");
                b0._Filter();
                b0.Filter_();
                b1.SameStageFragment_();
                b3.MethodInvocation_();
                b3.SimpleName("bindingsTester");
                b1.Resolver();
                b3.SimpleName("assertUndef");
                b3.Arguments_(4);
                b3.StringLiteral("where3aName");
                b3.StringLiteral("where3b");
                b3.StringLiteral("where3c");
                b3.StringLiteral("where4Name");
                b3._Arguments();
                b3._MethodInvocation();
                b1._SameStageFragment();
                b0.VariableTest("where3c");
                b0._Filter();
                b0._Tuple();
                b0.Path_(2);
                b0.FeatureStep("features");
                b0.Filter_();
                b0.ChildStep();
                b0.ExpressionTest_();
                b0.Filter_();
                b0.FeatureStep("name");
                b0.VariableTest("featureName");
                b0._Filter();
                b0._ExpressionTest();
                b0._Filter();
                b0._Path();
                b0.Filter_();
                b1.SameStageFragment_();
                b3.InfixExpression_();
                b3.InfixExpression_();
                b3.SimpleName("fromName");
                b3.InfixOperator("+");
                b3.SimpleName("selectName");
                b1.Resolver();
                b3._InfixExpression();
                b3.InfixOperator("+");
                b3.InfixExpression_();
                b3.SimpleName("where1Name");
                b3.InfixOperator("+");
                b3.SimpleName("where2Name");
                b1.Resolver();
                b3._InfixExpression();
                b1.Resolver();
                b3._InfixExpression();
                b1._SameStageFragment();
                b0.VariableTest("where4Name");
                b0._Filter();
                b1.Resolver();
                b0._Select();
                b0._Sequence();
                b0.RemoveNames_();
                b0.TemplateNames();
                b0.Names_(2);
                b0.Name("where4Name");
                b0.Name("featureName");
                b0._Names();
                b0._RemoveNames();
                b0._Select();
            }
        };
    }

    public ITemplateFactory<IEntity> newSelectBindingScopes2() {
        return new AbstractTemplateFactory<IEntity>() {

            public void apply(org.whole.lang.builders.IBuilderOperation op) {
                org.whole.lang.queries.builders.IQueriesBuilder b0 = (org.whole.lang.queries.builders.IQueriesBuilder) op.wGetBuilder(org.whole.lang.queries.reflect.QueriesLanguageKit.URI);
                b0.Select_();
                b0.Tuple_(2);
                org.whole.lang.commons.builders.ICommonsBuilder b1 = (org.whole.lang.commons.builders.ICommonsBuilder) op.wGetBuilder(org.whole.lang.commons.reflect.CommonsLanguageKit.URI);
                b1.StageUpFragment_();
                org.whole.lang.text.builders.ITextBuilder b2 = (org.whole.lang.text.builders.ITextBuilder) op.wGetBuilder(org.whole.lang.text.reflect.TextLanguageKit.URI);
                b2.Document_(2);
                b2.Row_(3);
                b2.Text("from:");
                b1.Variable_();
                b1.VarType("http://lang.whole.org/Text#Text");
                b1.VarName("fromName");
                b1.Quantifier("!");
                b1._Variable();
                b1.StageDownFragment_();
                b0.Filter_();
                b0.FeatureStep("name");
                b0.VariableTest("selectName");
                b0._Filter();
                b1._StageDownFragment();
                b2._Row();
                b2.Row_(2);
                b2.Text("where1Name:");
                b1.Variable_();
                b1.VarType("http://lang.whole.org/Text#Text");
                b1.VarName("where1Name");
                b1.Quantifier("!");
                b1._Variable();
                b2._Row();
                b2._Document();
                b1._StageUpFragment();
                b0.SelfStep();
                b0._Tuple();
                b0.Filter_();
                b0.DescendantOrSelfStep();
                b0.And_(2);
                b0.TypeTest("SimpleEntity");
                b0.ExpressionTest_();
                b0.Filter_();
                b0.FeatureStep("name");
                b0.VariableTest("fromName");
                b0._Filter();
                b0._ExpressionTest();
                b0._And();
                b0._Filter();
                b0.Filter_();
                b1.SameStageFragment_();
                org.whole.lang.java.builders.IJavaBuilder b3 = (org.whole.lang.java.builders.IJavaBuilder) op.wGetBuilder(org.whole.lang.java.reflect.JavaLanguageKit.URI);
                b3.InfixExpression_();
                b3.SimpleName("fromName");
                b3.InfixOperator("+");
                b3.SimpleName("selectName");
                b1.Resolver();
                b3._InfixExpression();
                b1._SameStageFragment();
                b0.VariableTest("where1Name");
                b0._Filter();
                b0.TemplateNames();
                b0._Select();
            }
        };
    }

    public ITemplateFactory<IEntity> newSelectBindingScopes3() {
        return new AbstractTemplateFactory<IEntity>() {

            public void apply(org.whole.lang.builders.IBuilderOperation op) {
                org.whole.lang.queries.builders.IQueriesBuilder b0 = (org.whole.lang.queries.builders.IQueriesBuilder) op.wGetBuilder(org.whole.lang.queries.reflect.QueriesLanguageKit.URI);
                b0.Select_();
                b0.Tuple_(4);
                org.whole.lang.commons.builders.ICommonsBuilder b1 = (org.whole.lang.commons.builders.ICommonsBuilder) op.wGetBuilder(org.whole.lang.commons.reflect.CommonsLanguageKit.URI);
                b1.StageUpFragment_();
                org.whole.lang.text.builders.ITextBuilder b2 = (org.whole.lang.text.builders.ITextBuilder) op.wGetBuilder(org.whole.lang.text.reflect.TextLanguageKit.URI);
                b2.Document_(1);
                b2.Row_(2);
                b2.Text("from:");
                b1.Variable_();
                b1.VarType("http://lang.whole.org/Text#Text");
                b1.VarName("fromName");
                b1.Quantifier("!");
                b1._Variable();
                b2._Row();
                b2._Document();
                b1._StageUpFragment();
                b0.VariableRefStep("fromName");
                b0.Filter_();
                b0.VariableRefStep("fromName");
                b0.VariableTest("entityName");
                b0._Filter();
                b0.Filter_();
                b0.VariableRefStep("fromName");
                b0.VariableTest("fromName");
                b0._Filter();
                b0._Tuple();
                b0.Filter_();
                b0.DescendantOrSelfStep();
                b0.And_(2);
                b0.TypeTest("SimpleEntity");
                b0.ExpressionTest_();
                b0.Filter_();
                b0.FeatureStep("name");
                b0.VariableTest("fromName");
                b0._Filter();
                b0._ExpressionTest();
                b0._And();
                b0._Filter();
                b1.Resolver();
                b0.TemplateNames();
                b0._Select();
            }
        };
    }

    public ITemplateFactory<IEntity> newSelectDeclaredNamesBinding() {
        return new AbstractTemplateFactory<IEntity>() {

            public void apply(org.whole.lang.builders.IBuilderOperation op) {
                org.whole.lang.queries.builders.IQueriesBuilder b0 = (org.whole.lang.queries.builders.IQueriesBuilder) op.wGetBuilder(org.whole.lang.queries.reflect.QueriesLanguageKit.URI);
                b0.Select_();
                org.whole.lang.commons.builders.ICommonsBuilder b1 = (org.whole.lang.commons.builders.ICommonsBuilder) op.wGetBuilder(org.whole.lang.commons.reflect.CommonsLanguageKit.URI);
                b1.StageUpFragment_();
                org.whole.lang.text.builders.ITextBuilder b2 = (org.whole.lang.text.builders.ITextBuilder) op.wGetBuilder(org.whole.lang.text.reflect.TextLanguageKit.URI);
                b2.Document_(4);
                b1.Variable_();
                b1.VarType("http://lang.whole.org/Text#IRow");
                b1.VarName("removeAsVariableTest");
                b1.Quantifier("?");
                b1._Variable();
                b1.Variable_();
                b1.VarType("http://lang.whole.org/Text#IRow");
                b1.VarName("removeAsIndexVariableTest");
                b1.Quantifier("?");
                b1._Variable();
                b1.Variable_();
                b1.VarType("http://lang.whole.org/Text#IRow");
                b1.VarName("removeAsQueryDeclaration");
                b1.Quantifier("?");
                b1._Variable();
                b1.Variable_();
                b1.VarType("http://lang.whole.org/Text#IRow");
                b1.VarName("removeAsPatternMatching");
                b1.Quantifier("?");
                b1._Variable();
                b2._Document();
                b1._StageUpFragment();
                b0.StringLiteral("");
                b0.If_();
                b0.ExpressionTest_();
                b0.BooleanLiteral(false);
                b0._ExpressionTest();
                b0.Sequence_(4);
                b0.Filter_();
                b0.VoidLiteral();
                b0.VariableTest("removeAsVariableTest");
                b0._Filter();
                b0.Filter_();
                b0.VoidLiteral();
                b0.IndexVariableTest("removeAsIndexVariableTest");
                b0._Filter();
                b0.QueryDeclaration_();
                b0.Name("removeAsQueryDeclaration");
                b1.Resolver();
                b1.Resolver();
                b0._QueryDeclaration();
                b0.Filter_();
                b0.SelfStep();
                b0.ExpressionTest_();
                b1.StageUpFragment_();
                b2.Document_(1);
                b2.Row_(1);
                b1.Variable_();
                b1.VarType("http://lang.whole.org/Text#Text");
                b1.VarName("removeAsPatternMatching");
                b1.Quantifier("!");
                b1._Variable();
                b2._Row();
                b2._Document();
                b1._StageUpFragment();
                b0._ExpressionTest();
                b0._Filter();
                b0._Sequence();
                b0._If();
                b0.TemplateNames();
                b0._Select();
            }
        };
    }
}
