package org.whole.lang.mediawiki;

import org.whole.lang.builders.IBuilderOperation;
import org.whole.lang.templates.AbstractTemplateFactory;

public class MediaWikiActions extends AbstractTemplateFactory<org.whole.lang.actions.model.LanguageActionFactory> {

    public void apply(IBuilderOperation op) {
        org.whole.lang.actions.builders.IActionsBuilder b0 = (org.whole.lang.actions.builders.IActionsBuilder) op.wGetBuilder(org.whole.lang.actions.reflect.ActionsLanguageKit.URI);
        b0.LanguageActionFactory_();
        b0.URI("whole:org.whole.lang.mediawiki:MediaWikiActions");
        b0.Namespace("org.whole.lang.mediawiki");
        b0.Name("MediaWikiActions");
        org.whole.lang.commons.builders.ICommonsBuilder b1 = (org.whole.lang.commons.builders.ICommonsBuilder) op.wGetBuilder(org.whole.lang.commons.reflect.CommonsLanguageKit.URI);
        b1.Resolver();
        b0.URI("whole:org.whole.lang.mediawiki:MediaWiki");
        b0.ToolbarActions_();
        b1.Resolver();
        b0.SimpleAction_();
        b0.Label("Normalizer");
        org.whole.lang.queries.builders.IQueriesBuilder b2 = (org.whole.lang.queries.builders.IQueriesBuilder) op.wGetBuilder(org.whole.lang.queries.reflect.QueriesLanguageKit.URI);
        b2.CartesianUpdate_();
        b2.Path_(3);
        b2.FeatureStep("whole:org.whole.lang.mediawiki:MediaWiki#wikiPages");
        b2.Filter_();
        b2.ChildStep();
        b2.ExpressionTest_();
        b2.Filter_();
        b2.FeatureStep("whole:org.whole.lang.mediawiki:MediaWiki#title");
        b2.VariableTest("title");
        b2._Filter();
        b2._ExpressionTest();
        b2._Filter();
        b2.Filter_();
        b2.FeatureStep("whole:org.whole.lang.mediawiki:MediaWiki#article");
        b2.KindTest("RESOLVER");
        b2._Filter();
        b2._Path();
        b2.Block_(2);
        b2.Filter_();
        b2.Addition_();
        b2.VariableRefStep("folderFullPath");
        b2.Addition_();
        b2.StringLiteral("/");
        b2.Addition_();
        b2.VariableRefStep("title");
        b2.StringLiteral(".mediawiki");
        b2._Addition();
        b2._Addition();
        b2._Addition();
        b2.VariableTest("articleFileName");
        b2._Filter();
        b1.SameStageFragment_();
        org.whole.lang.workflows.builders.IWorkflowsBuilder b3 = (org.whole.lang.workflows.builders.IWorkflowsBuilder) op.wGetBuilder(org.whole.lang.workflows.reflect.WorkflowsLanguageKit.URI);
        b3.LoadModel_();
        b3.Text("load article");
        b1.Resolver();
        b3.StringLiteral("org.whole.lang.grammars.codebase.MediaWikiPersistenceKit");
        b3.ResourceKind("WORKSPACE");
        b3.Variable("articleFileName");
        b1.Resolver();
        b3._LoadModel();
        b1._SameStageFragment();
        b2._Block();
        b2._CartesianUpdate();
        b0._SimpleAction();
        b1.Resolver();
        b1.Resolver();
        b0.SimpleAction_();
        b0.Label("Artifacts Generator");
        b2.Block_(13);
        b2.QueryDeclaration_();
        b2.Name("getImageWidth");
        b2.Names_(4);
        b2.Name("filepath");
        b2.Name("file");
        b2.Name("image");
        b2.Name("filepath");
        b2._Names();
        b1.SameStageFragment_();
        b3.Sequence_();
        b3.Text("sequence");
        b3.FlowObjects_(3);
        b3.CreateJavaClassInstance_();
        b3.Text("create a file from path");
        b3.Variable("file");
        b1.Resolver();
        b3.StringLiteral("java.io.File");
        b3.StringLiteral("File(java.lang.String)");
        b3.Expressions_(1);
        b3.Variable("filepath");
        b3._Expressions();
        b3._CreateJavaClassInstance();
        b3.InvokeJavaClassMethod_();
        b3.Text("read image from file");
        b3.Variable("image");
        b1.Resolver();
        b3.StringLiteral("javax.imageio.ImageIO");
        b3.StringLiteral("read(java.io.File)");
        b3.Expressions_(1);
        b3.Variable("file");
        b3._Expressions();
        b3._InvokeJavaClassMethod();
        b3.InvokeJavaInstanceMethod_();
        b3.Text("get image width");
        b1.Resolver();
        b3.Variable("image");
        b1.Resolver();
        b3.StringLiteral("java.awt.image.BufferedImage");
        b3.StringLiteral("getWidth()");
        b1.Resolver();
        b3._InvokeJavaInstanceMethod();
        b3._FlowObjects();
        b3._Sequence();
        b1._SameStageFragment();
        b2._QueryDeclaration();
        b2.QueryDeclaration_();
        b2.Name("escapeText");
        b2.Names_(1);
        b2.Name("escaped");
        b2._Names();
        b2.Block_(1);
        b1.SameStageFragment_();
        b3.Sequence_();
        b3.Text("sequence");
        b3.FlowObjects_(6);
        b3.InvokeJavaInstanceMethod_();
        b3.Text("escape left curly braces");
        b3.Variable("escaped");
        b3.Variable("self");
        b1.Resolver();
        b3.StringLiteral("java.lang.String");
        b3.StringLiteral("replace(java.lang.CharSequence, java.lang.CharSequence)");
        b3.Expressions_(2);
        b3.StringLiteral("{");
        b3.StringLiteral("\\{");
        b3._Expressions();
        b3._InvokeJavaInstanceMethod();
        b3.InvokeJavaInstanceMethod_();
        b3.Text("escape right curly braces");
        b3.Variable("escaped");
        b3.Variable("escaped");
        b1.Resolver();
        b3.StringLiteral("java.lang.String");
        b3.StringLiteral("replace(java.lang.CharSequence, java.lang.CharSequence)");
        b3.Expressions_(2);
        b3.StringLiteral("}");
        b3.StringLiteral("\\}");
        b3._Expressions();
        b3._InvokeJavaInstanceMethod();
        b3.InvokeJavaInstanceMethod_();
        b3.Text("escape sharp");
        b3.Variable("escaped");
        b3.Variable("escaped");
        b1.Resolver();
        b3.StringLiteral("java.lang.String");
        b3.StringLiteral("replace(java.lang.CharSequence, java.lang.CharSequence)");
        b3.Expressions_(2);
        b3.StringLiteral("#");
        b3.StringLiteral("\\#");
        b3._Expressions();
        b3._InvokeJavaInstanceMethod();
        b3.InvokeJavaInstanceMethod_();
        b3.Text("escape subscript");
        b3.Variable("escaped");
        b3.Variable("escaped");
        b1.Resolver();
        b3.StringLiteral("java.lang.String");
        b3.StringLiteral("replace(java.lang.CharSequence, java.lang.CharSequence)");
        b3.Expressions_(2);
        b3.StringLiteral("_");
        b3.StringLiteral("\\_");
        b3._Expressions();
        b3._InvokeJavaInstanceMethod();
        b3.InvokeJavaInstanceMethod_();
        b3.Text("escape ...");
        b3.Variable("escaped");
        b3.Variable("escaped");
        b1.Resolver();
        b3.StringLiteral("java.lang.String");
        b3.StringLiteral("replace(java.lang.CharSequence, java.lang.CharSequence)");
        b3.Expressions_(2);
        b3.StringLiteral("...");
        b3.StringLiteral("\\ldots");
        b3._Expressions();
        b3._InvokeJavaInstanceMethod();
        b3.InvokeJavaInstanceMethod_();
        b3.Text("escape greater then");
        b3.Variable("escaped");
        b3.Variable("escaped");
        b1.Resolver();
        b3.StringLiteral("java.lang.String");
        b3.StringLiteral("replace(java.lang.CharSequence, java.lang.CharSequence)");
        b3.Expressions_(2);
        b3.StringLiteral(">");
        b3.StringLiteral("\\textgreater{}");
        b3._Expressions();
        b3._InvokeJavaInstanceMethod();
        b3._FlowObjects();
        b3._Sequence();
        b1._SameStageFragment();
        b2._Block();
        b2._QueryDeclaration();
        b2.QueryDeclaration_();
        b2.Name("escapeLabel");
        b2.Names_(1);
        b2.Name("escaped");
        b2._Names();
        b2.Block_(1);
        b1.SameStageFragment_();
        b3.Sequence_();
        b3.Text("sequence");
        b3.FlowObjects_(1);
        b3.InvokeJavaInstanceMethod_();
        b3.Text("escape subsript");
        b3.Variable("escaped");
        b3.Variable("self");
        b1.Resolver();
        b3.StringLiteral("java.lang.String");
        b3.StringLiteral("replace(java.lang.CharSequence, java.lang.CharSequence)");
        b3.Expressions_(2);
        b3.StringLiteral("_");
        b3.StringLiteral("-");
        b3._Expressions();
        b3._InvokeJavaInstanceMethod();
        b3._FlowObjects();
        b3._Sequence();
        b1._SameStageFragment();
        b2._Block();
        b2._QueryDeclaration();
        b2.QueryDeclaration_();
        b2.Name("mapLink");
        b2.Names_(9);
        b2.Name("filename");
        b2.Name("caption");
        b2.Name("scale");
        b2.Name("width");
        b2.Name("text");
        b2.Name("description");
        b2.Name("title");
        b2.Name("section");
        b2.Name("url");
        b2._Names();
        b2.Choose_(3);
        b2.If_();
        b2.TypeTest("FileLink");
        b2.Choose_(2);
        b2.Select_();
        b1.StageUpFragment_();
        org.whole.lang.text.builders.ITextBuilder b4 = (org.whole.lang.text.builders.ITextBuilder) op.wGetBuilder(org.whole.lang.text.reflect.TextLanguageKit.URI);
        b4.Document_(1);
        b4.Row_(3);
        b4.Text("\\includegraphics[scale=0.12]{");
        b1.Variable_();
        b1.VarType("http://lang.whole.org/Text#Text");
        b1.VarName("filename");
        b1.Quantifier("!");
        b1._Variable();
        b4.Text("}");
        b4._Row();
        b4._Document();
        b1._StageUpFragment();
        b2.Filter_();
        b2.SelfStep();
        b2.ExpressionTest_();
        b2.Filter_();
        b2.AncestorStep();
        b2.TypeTest("Table");
        b2._Filter();
        b2._ExpressionTest();
        b2._Filter();
        b2.Sequence_(2);
        b2.Filter_();
        b2.FeatureStep("filename");
        b2.VariableTest("filename");
        b2._Filter();
        b2.Select_();
        b2.Filter_();
        b1.StageUpFragment_();
        b4.Row_(5);
        b4.Text("\\caption{");
        b1.Variable_();
        b1.VarType("http://lang.whole.org/Text#Text");
        b1.VarName("text");
        b1.Quantifier("!");
        b1._Variable();
        b4.Text("}\\label{fig:");
        b1.Variable_();
        b1.VarType("http://lang.whole.org/Text#Text");
        b1.VarName("filename");
        b1.Quantifier("!");
        b1._Variable();
        b4.Text("}");
        b4._Row();
        b1._StageUpFragment();
        b2.VariableTest("caption");
        b2._Filter();
        b2.Path_(2);
        b2.FeatureStep("options");
        b2.Filter_();
        b2.ChildStep();
        b2.And_(2);
        b2.TypeTest("Caption");
        b2.VariableTest("text");
        b2._And();
        b2._Filter();
        b2._Path();
        b1.Resolver();
        b2.TemplateNames();
        b2._Select();
        b2._Sequence();
        b2.TemplateNames();
        b2._Select();
        b2.Select_();
        b1.StageUpFragment_();
        b4.Document_(6);
        b4.Row_(1);
        b4.Text("\\begin{figure}[H]");
        b4._Row();
        b4.Row_(1);
        b4.Text("\\begin{center}");
        b4._Row();
        b4.Row_(5);
        b4.Text("\\includegraphics[scale=");
        b1.Variable_();
        b1.VarType("http://lang.whole.org/Text#Text");
        b1.VarName("scale");
        b1.Quantifier("!");
        b1._Variable();
        b4.Text("]{");
        b1.Variable_();
        b1.VarType("http://lang.whole.org/Text#Text");
        b1.VarName("filename");
        b1.Quantifier("!");
        b1._Variable();
        b4.Text("}");
        b4._Row();
        b4.Row_(1);
        b4.Text("\\end{center}");
        b4._Row();
        b1.Variable_();
        b1.VarType("http://lang.whole.org/Text#IRow");
        b1.VarName("caption");
        b1.Quantifier("?");
        b1._Variable();
        b4.Row_(1);
        b4.Text("\\end{figure}");
        b4._Row();
        b4._Document();
        b1._StageUpFragment();
        b2.SelfStep();
        b2.Sequence_(4);
        b2.Filter_();
        b2.FeatureStep("filename");
        b2.VariableTest("filename");
        b2._Filter();
        b2.Filter_();
        b2.Call_();
        b2.Name("getImageWidth");
        b2.Expressions_(1);
        b2.Addition_();
        b2.VariableRefStep("folderLocation");
        b2.Addition_();
        b2.StringLiteral("/");
        b2.VariableRefStep("filename");
        b2._Addition();
        b2._Addition();
        b2._Expressions();
        b2._Call();
        b2.VariableTest("width");
        b2._Filter();
        b2.Filter_();
        b2.Choose_(2);
        b2.If_();
        b2.ExpressionTest_();
        b2.LessOrEquals_();
        b2.Multiplication_();
        b2.VariableRefStep("width");
        b2.DoubleLiteral(0.5);
        b2._Multiplication();
        b2.DoubleLiteral(325.0);
        b2._LessOrEquals();
        b2._ExpressionTest();
        b2.DoubleLiteral(0.5);
        b2._If();
        b2.Do_();
        b2.Division_();
        b2.DoubleLiteral(325.0);
        b2.VariableRefStep("width");
        b2._Division();
        b2._Do();
        b2._Choose();
        b2.VariableTest("scale");
        b2._Filter();
        b2.Select_();
        b2.Filter_();
        b1.StageUpFragment_();
        b4.Row_(5);
        b4.Text("\\caption{");
        b1.Variable_();
        b1.VarType("http://lang.whole.org/Text#Text");
        b1.VarName("text");
        b1.Quantifier("!");
        b1._Variable();
        b4.Text("}\\label{fig:");
        b1.Variable_();
        b1.VarType("http://lang.whole.org/Text#Text");
        b1.VarName("filename");
        b1.Quantifier("!");
        b1._Variable();
        b4.Text("}");
        b4._Row();
        b1._StageUpFragment();
        b2.VariableTest("caption");
        b2._Filter();
        b2.Path_(2);
        b2.FeatureStep("options");
        b2.Filter_();
        b2.ChildStep();
        b2.And_(2);
        b2.TypeTest("Caption");
        b2.VariableTest("text");
        b2._And();
        b2._Filter();
        b2._Path();
        b1.Resolver();
        b2.TemplateNames();
        b2._Select();
        b2._Sequence();
        b2.TemplateNames();
        b2._Select();
        b2._Choose();
        b2._If();
        b2.If_();
        b2.TypeTest("InternalLink");
        b2.Select_();
        b1.StageUpFragment_();
        b4.Document_(1);
        b4.Row_(5);
        b4.Text("\\hyperref[");
        b1.Variable_();
        b1.VarType("http://lang.whole.org/Text#Text");
        b1.VarName("label");
        b1.Quantifier("!");
        b1._Variable();
        b4.Text("]{");
        b1.Variable_();
        b1.VarType("http://lang.whole.org/Text#Text");
        b1.VarName("description");
        b1.Quantifier("!");
        b1._Variable();
        b4.Text("}");
        b4._Row();
        b4._Document();
        b1._StageUpFragment();
        b2.SelfStep();
        b2.Sequence_(4);
        b2.Path_(2);
        b2.FeatureStep("articleLink");
        b2.Filter_();
        b2.FeatureStep("title");
        b2.VariableTest("title");
        b2._Filter();
        b2._Path();
        b2.Path_(2);
        b2.FeatureStep("articleLink");
        b2.Filter_();
        b2.FeatureStep("section");
        b2.VariableTest("section");
        b2._Filter();
        b2._Path();
        b2.Path_(2);
        b2.Choose_(2);
        b2.If_();
        b2.ExpressionTest_();
        b2.Filter_();
        b2.VariableRefStep("section");
        b2.KindTest("IMPL");
        b2._Filter();
        b2._ExpressionTest();
        b2.Addition_();
        b2.StringLiteral("sec:");
        b2.Addition_();
        b2.VariableRefStep("title");
        b2.Addition_();
        b2.StringLiteral("-");
        b2.VariableRefStep("section");
        b2._Addition();
        b2._Addition();
        b2._Addition();
        b2._If();
        b2.Addition_();
        b2.StringLiteral("chap:");
        b2.VariableRefStep("title");
        b2._Addition();
        b2._Choose();
        b2.Filter_();
        b2.Call_();
        b2.Name("escapeLabel");
        b1.Resolver();
        b2._Call();
        b2.VariableTest("label");
        b2._Filter();
        b2._Path();
        b2.Path_(2);
        b2.Choose_(2);
        b2.Filter_();
        b2.FeatureStep("description");
        b2.KindTest("IMPL");
        b2._Filter();
        b2.VariableRefStep("title");
        b2._Choose();
        b2.Filter_();
        b2.Call_();
        b2.Name("escapeText");
        b1.Resolver();
        b2._Call();
        b2.VariableTest("description");
        b2._Filter();
        b2._Path();
        b2._Sequence();
        b2.TemplateNames();
        b2._Select();
        b2._If();
        b2.If_();
        b2.TypeTest("ExternalLink");
        b2.Select_();
        b1.StageUpFragment_();
        b4.Document_(1);
        b4.Row_(5);
        b4.Text("\\href{");
        b1.Variable_();
        b1.VarType("http://lang.whole.org/Text#Text");
        b1.VarName("url");
        b1.Quantifier("!");
        b1._Variable();
        b4.Text("}{");
        b1.Variable_();
        b1.VarType("http://lang.whole.org/Text#Text");
        b1.VarName("description");
        b1.Quantifier("!");
        b1._Variable();
        b4.Text("}");
        b4._Row();
        b4._Document();
        b1._StageUpFragment();
        b2.SelfStep();
        b2.Sequence_(2);
        b2.Filter_();
        b2.FeatureStep("url");
        b2.VariableTest("url");
        b2._Filter();
        b2.Path_(2);
        b2.Choose_(2);
        b2.Filter_();
        b2.FeatureStep("description");
        b2.KindTest("IMPL");
        b2._Filter();
        b2.VariableRefStep("url");
        b2._Choose();
        b2.Filter_();
        b2.Call_();
        b2.Name("escapeText");
        b1.Resolver();
        b2._Call();
        b2.VariableTest("description");
        b2._Filter();
        b2._Path();
        b2._Sequence();
        b2.TemplateNames();
        b2._Select();
        b2._If();
        b2._Choose();
        b2._QueryDeclaration();
        b2.QueryDeclaration_();
        b2.Name("mapTemplate");
        b2.Names_(4);
        b2.Name("type");
        b2.Name("icon");
        b2.Name("row");
        b2.Name("contents");
        b2._Names();
        b2.Block_(1);
        b2.Select_();
        b1.StageUpFragment_();
        b4.Document_(7);
        b4.Row_(1);
        b4.Text("\\begin{framed}");
        b4._Row();
        b4.Row_(1);
        b4.Text("\\noindent");
        b4._Row();
        b4.Row_(3);
        b4.Text("\\includegraphics[scale=0.5]{");
        b1.Variable_();
        b1.VarType("http://lang.whole.org/Text#Text");
        b1.VarName("icon");
        b1.Quantifier("!");
        b1._Variable();
        b4.Text("}");
        b4._Row();
        b4.Row_(3);
        b4.Text("\\textbf{");
        b1.Variable_();
        b1.VarType("http://lang.whole.org/Text#Text");
        b1.VarName("heading");
        b1.Quantifier("!");
        b1._Variable();
        b4.Text("}\\\\");
        b4._Row();
        b4.Row_(1);
        b4.Text("\\\\");
        b4._Row();
        b1.InlineVariable_();
        b1.VarType("http://lang.whole.org/Text#IRow");
        b1.VarName("row");
        b1.Quantifier("+");
        b1._InlineVariable();
        b4.Row_(1);
        b4.Text("\\end{framed}");
        b4._Row();
        b4._Document();
        b1._StageUpFragment();
        b2.SelfStep();
        b2.Sequence_(3);
        b2.Path_(2);
        b2.FeatureStep("title");
        b2.Filter_();
        b2.Choose_(3);
        b2.If_();
        b2.ExpressionTest_();
        b1.StageUpFragment_();
        org.whole.lang.reflect.EntityDescriptorEnum e5 = org.whole.lang.reflect.ReflectionFactory.getLanguageKit("whole:org.whole.lang.mediawiki:MediaWiki").getEntityDescriptorEnum();
        b1.wEntity(e5.valueOf("ArticleTitle"), "Tip");
        b1._StageUpFragment();
        b2._ExpressionTest();
        b2.StringLiteral("Tip.png");
        b2._If();
        b2.If_();
        b2.ExpressionTest_();
        b1.StageUpFragment_();
        b1.wEntity(e5.valueOf("ArticleTitle"), "Note");
        b1._StageUpFragment();
        b2._ExpressionTest();
        b2.StringLiteral("Note.png");
        b2._If();
        b2.If_();
        b2.ExpressionTest_();
        b1.StageUpFragment_();
        b1.wEntity(e5.valueOf("ArticleTitle"), "Warning");
        b1._StageUpFragment();
        b2._ExpressionTest();
        b2.StringLiteral("Warning.png");
        b2._If();
        b2._Choose();
        b2.VariableTest("icon");
        b2._Filter();
        b2._Path();
        b2.Filter_();
        b2.FeatureStep("heading");
        b2.VariableTest("heading");
        b2._Filter();
        b2.Select_();
        b2.Filter_();
        b1.StageUpFragment_();
        b4.Document_(1);
        b1.InlineVariable_();
        b1.VarType("http://lang.whole.org/Text#IRow");
        b1.VarName("contents");
        b1.Quantifier("*");
        b1._InlineVariable();
        b4._Document();
        b1._StageUpFragment();
        b2.VariableTest("row");
        b2._Filter();
        b2.Path_(1);
        b2.FeatureStep("body");
        b2._Path();
        b2.Path_(2);
        b2.ChildStep();
        b2.Filter_();
        b2.Call_();
        b2.Name("mapBlock");
        b1.Resolver();
        b2._Call();
        b2.VariableTest("contents");
        b2._Filter();
        b2._Path();
        b2.TemplateNames();
        b2._Select();
        b2._Sequence();
        b2.TemplateNames();
        b2._Select();
        b2._Block();
        b2._QueryDeclaration();
        b2.QueryDeclaration_();
        b2.Name("mapTable");
        b2.Names_(4);
        b2.Name("format");
        b2.Name("row");
        b2.Name("column");
        b2.Name("terminator");
        b2._Names();
        b2.Select_();
        b1.StageUpFragment_();
        b4.Document_(3);
        b4.Row_(3);
        b4.Text("\\begin{tabular}{ ");
        b1.Variable_();
        b1.VarType("http://lang.whole.org/Text#Text");
        b1.VarName("format");
        b1.Quantifier("+");
        b1._Variable();
        b4.Text("}");
        b4._Row();
        b1.InlineVariable_();
        b1.VarType("http://lang.whole.org/Text#IRow");
        b1.VarName("row");
        b1.Quantifier("+");
        b1._InlineVariable();
        b4.Row_(1);
        b4.Text("\\end{tabular}");
        b4._Row();
        b4._Document();
        b1._StageUpFragment();
        b2.SelfStep();
        b2.Sequence_(2);
        b2.Select_();
        b2.Filter_();
        b1.StageUpFragment_();
        b4.Text("l ");
        b1._StageUpFragment();
        b2.VariableTest("format");
        b2._Filter();
        b2.Path_(4);
        b2.FeatureStep("rows");
        b2.Filter_();
        b2.ChildStep();
        b2.IndexTest_();
        b2.IntLiteral(0);
        b2._IndexTest();
        b2._Filter();
        b2.FeatureStep("columns");
        b2.ChildStep();
        b2._Path();
        b1.Resolver();
        b2.TemplateNames();
        b2._Select();
        b2.Select_();
        b2.Filter_();
        b1.StageUpFragment_();
        b4.Document_(1);
        b1.InlineVariable_();
        b1.VarType("http://lang.whole.org/Text#IRow");
        b1.VarName("column");
        b1.Quantifier("*");
        b1._InlineVariable();
        b4._Document();
        b1._StageUpFragment();
        b2.VariableTest("row");
        b2._Filter();
        b2.Path_(2);
        b2.FeatureStep("rows");
        b2.ChildStep();
        b2._Path();
        b2.Select_();
        b2.Filter_();
        b1.StageUpFragment_();
        b4.Document_(2);
        b1.InlineVariable_();
        b1.VarType("http://lang.whole.org/Text#IRow");
        b1.VarName("contents");
        b1.Quantifier("*");
        b1._InlineVariable();
        b4.Row_(1);
        b1.Variable_();
        b1.VarType("http://lang.whole.org/Text#Text");
        b1.VarName("terminator");
        b1.Quantifier("!");
        b1._Variable();
        b4._Row();
        b4._Document();
        b1._StageUpFragment();
        b2.VariableTest("column");
        b2._Filter();
        b2.Path_(2);
        b2.FeatureStep("columns");
        b2.ChildStep();
        b2._Path();
        b2.Sequence_(2);
        b2.Path_(2);
        b2.Choose_(2);
        b2.FeatureStep("header");
        b2.FeatureStep("data");
        b2._Choose();
        b2.Filter_();
        b2.Call_();
        b2.Name("mapInlineText");
        b1.Resolver();
        b2._Call();
        b2.VariableTest("contents");
        b2._Filter();
        b2._Path();
        b2.Filter_();
        b2.Choose_(2);
        b2.If_();
        b2.ExpressionTest_();
        b2.FollowingSiblingStep();
        b2._ExpressionTest();
        b2.StringLiteral("&");
        b2._If();
        b2.Do_();
        b2.StringLiteral("\\\\");
        b2._Do();
        b2._Choose();
        b2.VariableTest("terminator");
        b2._Filter();
        b2._Sequence();
        b2.TemplateNames();
        b2._Select();
        b2.TemplateNames();
        b2._Select();
        b2._Sequence();
        b2.TemplateNames();
        b2._Select();
        b2._QueryDeclaration();
        b2.QueryDeclaration_();
        b2.Name("mapList");
        b2.Names_(3);
        b2.Name("ambient");
        b2.Name("item");
        b2.Name("contents");
        b2._Names();
        b2.Block_(2);
        b2.Path_(2);
        b2.Filter_();
        b2.ChildStep();
        b2.IndexTest_();
        b2.IntLiteral(0);
        b2._IndexTest();
        b2._Filter();
        b2.Filter_();
        b2.Choose_(2);
        b2.If_();
        b2.TypeTest("BulletItem");
        b2.StringLiteral("itemize");
        b2._If();
        b2.If_();
        b2.TypeTest("EnumeratedItem");
        b2.StringLiteral("enumerate");
        b2._If();
        b2._Choose();
        b2.VariableTest("ambient");
        b2._Filter();
        b2._Path();
        b2.Select_();
        b1.StageUpFragment_();
        b4.Document_(3);
        b4.Row_(3);
        b4.Text("\\begin{");
        b1.Variable_();
        b1.VarType("http://lang.whole.org/Text#Text");
        b1.VarName("ambient");
        b1.Quantifier("!");
        b1._Variable();
        b4.Text("}");
        b4._Row();
        b1.InlineVariable_();
        b1.VarType("http://lang.whole.org/Text#IRow");
        b1.VarName("item");
        b1.Quantifier("*");
        b1._InlineVariable();
        b4.Row_(3);
        b4.Text("\\end{");
        b1.Variable_();
        b1.VarType("http://lang.whole.org/Text#Text");
        b1.VarName("ambient");
        b1.Quantifier("!");
        b1._Variable();
        b4.Text("}");
        b4._Row();
        b4._Document();
        b1._StageUpFragment();
        b2.SelfStep();
        b2.Select_();
        b2.Filter_();
        b1.StageUpFragment_();
        b4.Document_(2);
        b4.Row_(1);
        b4.Text("\\item");
        b4._Row();
        b1.InlineVariable_();
        b1.VarType("http://lang.whole.org/Text#IRow");
        b1.VarName("contents");
        b1.Quantifier("*");
        b1._InlineVariable();
        b4._Document();
        b1._StageUpFragment();
        b2.VariableTest("item");
        b2._Filter();
        b2.Path_(2);
        b2.ChildStep();
        b2.FeatureStep("item");
        b2._Path();
        b2.Path_(1);
        b2.Filter_();
        b2.Call_();
        b2.Name("mapInlineText");
        b1.Resolver();
        b2._Call();
        b2.VariableTest("contents");
        b2._Filter();
        b2._Path();
        b2.TemplateNames();
        b2._Select();
        b2.TemplateNames();
        b2._Select();
        b2._Block();
        b2._QueryDeclaration();
        b2.QueryDeclaration_();
        b2.Name("mapInlineText");
        b2.Names_(1);
        b2.Name("inlineElement");
        b2._Names();
        b2.Block_(3);
        b2.QueryDeclaration_();
        b2.Name("mapTextWithFormatting");
        b2.Names_(2);
        b2.Name("style");
        b2.Name("contents");
        b2._Names();
        b2.Choose_(3);
        b2.If_();
        b2.TypeTest("Text");
        b2.Select_();
        b1.StageUpFragment_();
        b4.Row_(1);
        b1.Variable_();
        b1.VarType("http://lang.whole.org/Text#Text");
        b1.VarName("contents");
        b1.Quantifier("!");
        b1._Variable();
        b4._Row();
        b1._StageUpFragment();
        b2.SelfStep();
        b2.Filter_();
        b2.Call_();
        b2.Name("escapeText");
        b1.Resolver();
        b2._Call();
        b2.VariableTest("contents");
        b2._Filter();
        b2.TemplateNames();
        b2._Select();
        b2._If();
        b2.If_();
        b2.TypeTest("LineBreak");
        b1.StageUpFragment_();
        b4.Row_(1);
        b4.Text("\\newline");
        b4._Row();
        b1._StageUpFragment();
        b2._If();
        b2.Do_();
        b2.Select_();
        b1.StageUpFragment_();
        b4.Row_(5);
        b4.Text("\\");
        b1.Variable_();
        b1.VarType("http://lang.whole.org/Text#Text");
        b1.VarName("style");
        b1.Quantifier("!");
        b1._Variable();
        b4.Text("{");
        b1.InlineVariable_();
        b1.VarType("http://lang.whole.org/Text#IText");
        b1.VarName("contents");
        b1.Quantifier("!");
        b1._InlineVariable();
        b4.Text("}");
        b4._Row();
        b1._StageUpFragment();
        b2.SelfStep();
        b2.Sequence_(2);
        b2.Filter_();
        b2.Choose_(4);
        b2.If_();
        b2.TypeTest("Italics");
        b2.StringLiteral("emph");
        b2._If();
        b2.If_();
        b2.TypeTest("Bold");
        b2.StringLiteral("textbf");
        b2._If();
        b2.If_();
        b2.TypeTest("Deleted");
        b2.StringLiteral("sout");
        b2._If();
        b2.If_();
        b2.TypeTest("Teletype");
        b2.StringLiteral("lstinline");
        b2._If();
        b2._Choose();
        b2.VariableTest("style");
        b2._Filter();
        b2.Path_(2);
        b2.FeatureStep("text");
        b2.Filter_();
        b2.Call_();
        b2.Name("mapTextWithFormatting");
        b1.Resolver();
        b2._Call();
        b2.VariableTest("contents");
        b2._Filter();
        b2._Path();
        b2._Sequence();
        b2.TemplateNames();
        b2._Select();
        b2._Do();
        b2._Choose();
        b2._QueryDeclaration();
        b2.Filter_();
        b2.SelfStep();
        b2.VariableTest("heading");
        b2._Filter();
        b2.Select_();
        b1.StageUpFragment_();
        b4.Document_(1);
        b1.InlineVariable_();
        b1.VarType("http://lang.whole.org/Text#IRow");
        b1.VarName("inlineElement");
        b1.Quantifier("*");
        b1._InlineVariable();
        b4._Document();
        b1._StageUpFragment();
        b2.Path_(2);
        b2.ChildStep();
        b2.Filter_();
        b2.Choose_(3);
        b2.If_();
        b2.TypeTest("Nowiki");
        b2.Call_();
        b2.Name("mapNowiki");
        b1.Resolver();
        b2._Call();
        b2._If();
        b2.If_();
        b2.SubtypeTest("Link");
        b2.Call_();
        b2.Name("mapLink");
        b1.Resolver();
        b2._Call();
        b2._If();
        b2.If_();
        b2.SubtypeTest("TextWithFormatting");
        b1.StageUpFragment_();
        b4.Document_(1);
        b1.StageDownFragment_();
        b2.Call_();
        b2.Name("mapTextWithFormatting");
        b1.Resolver();
        b2._Call();
        b1._StageDownFragment();
        b4._Document();
        b1._StageUpFragment();
        b2._If();
        b2._Choose();
        b2.VariableTest("inlineElement");
        b2._Filter();
        b2._Path();
        b1.Resolver();
        b2.TemplateNames();
        b2._Select();
        b2._Block();
        b2._QueryDeclaration();
        b2.QueryDeclaration_();
        b2.Name("mapNowiki");
        b2.Names_(1);
        b2.Name("text");
        b2._Names();
        b2.Select_();
        b1.StageUpFragment_();
        b4.Document_(3);
        b4.Row_(1);
        b4.Text("\\begin{flushleft}");
        b4._Row();
        b4.Row_(1);
        b1.Variable_();
        b1.VarType("http://lang.whole.org/Text#Text");
        b1.VarName("text");
        b1.Quantifier("!");
        b1._Variable();
        b4._Row();
        b4.Row_(1);
        b4.Text("\\end{flushleft}");
        b4._Row();
        b4._Document();
        b1._StageUpFragment();
        b2.Filter_();
        b2.FeatureStep("text");
        b2.VariableTest("text");
        b2._Filter();
        b1.Resolver();
        b2.TemplateNames();
        b2._Select();
        b2._QueryDeclaration();
        b2.QueryDeclaration_();
        b2.Name("mapHeading");
        b2.Names_(4);
        b2.Name("title");
        b2.Name("subType");
        b2.Name("label");
        b2.Name("articleTitle");
        b2._Names();
        b2.Block_(1);
        b2.Select_();
        b1.StageUpFragment_();
        b4.Document_(2);
        b4.Row_(5);
        b4.Text("\\");
        b1.Variable_();
        b1.VarType("http://lang.whole.org/Text#Text");
        b1.VarName("subType");
        b1.Quantifier("!");
        b1._Variable();
        b4.Text("section{");
        b1.Variable_();
        b1.VarType("http://lang.whole.org/Text#Text");
        b1.VarName("title");
        b1.Quantifier("!");
        b1._Variable();
        b4.Text("}");
        b4._Row();
        b4.Row_(3);
        b4.Text("\\label{sec:");
        b1.Variable_();
        b1.VarType("http://lang.whole.org/Text#Text");
        b1.VarName("label");
        b1.Quantifier("!");
        b1._Variable();
        b4.Text("}");
        b4._Row();
        b4._Document();
        b1._StageUpFragment();
        b2.Filter_();
        b2.SelfStep();
        b2.And_(2);
        b2.VariableTest("title");
        b2.ExpressionTest_();
        b2.Path_(2);
        b2.Filter_();
        b2.AncestorStep();
        b2.TypeTest("WikiPage");
        b2._Filter();
        b2.Filter_();
        b2.FeatureStep("title");
        b2.VariableTest("articleTitle");
        b2._Filter();
        b2._Path();
        b2._ExpressionTest();
        b2._And();
        b2._Filter();
        b2.Sequence_(2);
        b2.Filter_();
        b2.Choose_(3);
        b2.If_();
        b2.TypeTest("Heading1");
        b2.StringLiteral("");
        b2._If();
        b2.If_();
        b2.TypeTest("Heading2");
        b2.StringLiteral("sub");
        b2._If();
        b2.Do_();
        b2.StringLiteral("subsub");
        b2._Do();
        b2._Choose();
        b2.VariableTest("subType");
        b2._Filter();
        b2.Path_(2);
        b2.Addition_();
        b2.VariableRefStep("articleTitle");
        b2.Addition_();
        b2.StringLiteral("-");
        b2.VariableRefStep("title");
        b2._Addition();
        b2._Addition();
        b2.Filter_();
        b2.Call_();
        b2.Name("escapeLabel");
        b1.Resolver();
        b2._Call();
        b2.VariableTest("label");
        b2._Filter();
        b2._Path();
        b2._Sequence();
        b2.TemplateNames();
        b2._Select();
        b2._Block();
        b2._QueryDeclaration();
        b2.QueryDeclaration_();
        b2.Name("mapParagraph");
        b2.Names_(1);
        b2.Name("contents");
        b2._Names();
        b2.Select_();
        b1.StageUpFragment_();
        b4.Document_(2);
        b1.InlineVariable_();
        b1.VarType("http://lang.whole.org/Text#IRow");
        b1.VarName("contents");
        b1.Quantifier("*");
        b1._InlineVariable();
        b4.Row_(1);
        b4.Text("");
        b4._Row();
        b4._Document();
        b1._StageUpFragment();
        b2.SelfStep();
        b2.Path_(2);
        b2.ChildStep();
        b2.Filter_();
        b2.Call_();
        b2.Name("mapInlineText");
        b1.Resolver();
        b2._Call();
        b2.VariableTest("contents");
        b2._Filter();
        b2._Path();
        b2.TemplateNames();
        b2._Select();
        b2._QueryDeclaration();
        b2.QueryDeclaration_();
        b2.Name("mapBlock");
        b2.Names_(2);
        b2.Name("text");
        b2.Name("contents");
        b2._Names();
        b2.Choose_(9);
        b2.If_();
        b2.SubtypeTest("Heading");
        b2.Call_();
        b2.Name("mapHeading");
        b1.Resolver();
        b2._Call();
        b2._If();
        b2.If_();
        b2.TypeTest("Nowiki");
        b2.Call_();
        b2.Name("mapNowiki");
        b1.Resolver();
        b2._Call();
        b2._If();
        b2.If_();
        b2.TypeTest("Template");
        b2.Call_();
        b2.Name("mapTemplate");
        b1.Resolver();
        b2._Call();
        b2._If();
        b2.If_();
        b2.TypeTest("List");
        b2.Call_();
        b2.Name("mapList");
        b1.Resolver();
        b2._Call();
        b2._If();
        b2.If_();
        b2.TypeTest("Table");
        b2.Call_();
        b2.Name("mapTable");
        b1.Resolver();
        b2._Call();
        b2._If();
        b2.If_();
        b2.SubtypeTest("Link");
        b2.Call_();
        b2.Name("mapLink");
        b1.Resolver();
        b2._Call();
        b2._If();
        b2.If_();
        b2.TypeTest("HorizontalRule");
        b1.StageUpFragment_();
        b4.Document_(1);
        b4.Row_(1);
        b4.Text("\\newline\\rule{\\textwidth}{1pt}");
        b4._Row();
        b4._Document();
        b1._StageUpFragment();
        b2._If();
        b2.If_();
        b2.TypeTest("SpaceBlock");
        b2.Select_();
        b1.StageUpFragment_();
        b4.Document_(3);
        b4.Row_(1);
        b4.Text("\\begin{alltt}");
        b4._Row();
        b1.InlineVariable_();
        b1.VarType("http://lang.whole.org/Text#IRow");
        b1.VarName("contents");
        b1.Quantifier("*");
        b1._InlineVariable();
        b4.Row_(1);
        b4.Text("\\end{alltt}");
        b4._Row();
        b4._Document();
        b1._StageUpFragment();
        b2.SelfStep();
        b2.Path_(2);
        b2.ChildStep();
        b2.Filter_();
        b2.Choose_(2);
        b2.If_();
        b2.TypeTest("EmptyLine");
        b1.StageUpFragment_();
        b4.Document_(1);
        b4.Row_(1);
        b4.Text("");
        b4._Row();
        b4._Document();
        b1._StageUpFragment();
        b2._If();
        b2.Do_();
        b2.Call_();
        b2.Name("mapInlineText");
        b1.Resolver();
        b2._Call();
        b2._Do();
        b2._Choose();
        b2.VariableTest("contents");
        b2._Filter();
        b2._Path();
        b2.TemplateNames();
        b2._Select();
        b2._If();
        b2.Do_();
        b2.Call_();
        b2.Name("mapParagraph");
        b1.Resolver();
        b2._Call();
        b2._Do();
        b2._Choose();
        b2._QueryDeclaration();
        b2.Select_();
        b1.StageUpFragment_();
        org.whole.lang.artifacts.builders.IArtifactsBuilder b6 = (org.whole.lang.artifacts.builders.IArtifactsBuilder) op.wGetBuilder(org.whole.lang.artifacts.reflect.ArtifactsLanguageKit.URI);
        b6.Workspace_();
        b1.Resolver();
        b6.Projects_(1);
        b6.Project_();
        b1.Variable_();
        b1.VarType("http://lang.whole.org/Artifacts#ProjectName");
        b1.VarName("projectName");
        b1.Quantifier("!");
        b1._Variable();
        b6.Natures_(1);
        b1.Resolver();
        b6._Natures();
        b1.Resolver();
        b6.Artifacts_(1);
        b6.FolderArtifact_();
        b1.Variable_();
        b1.VarType("http://lang.whole.org/Artifacts#FolderName");
        b1.VarName("sourceFolderName");
        b1.Quantifier("!");
        b1._Variable();
        b1.Resolver();
        b6.Artifacts_(1);
        b6.PackageArtifact_();
        b1.Variable_();
        b1.VarType("http://lang.whole.org/Artifacts#PackageName");
        b1.VarName("packageName");
        b1.Quantifier("!");
        b1._Variable();
        b1.Resolver();
        b6.Artifacts_(1);
        b6.FileArtifact_();
        b6.NameWithExtension_();
        b1.Variable_();
        b1.VarType("http://lang.whole.org/Artifacts#Name");
        b1.VarName("fileName");
        b1.Quantifier("!");
        b1._Variable();
        b6.Extension("tex");
        b6._NameWithExtension();
        b1.Resolver();
        b1.StageUpFragment_();
        b4.Document_(20);
        b4.TextSeparator("");
        b4.Row_(1);
        b4.Text("\\documentclass[a4paper,10pt]{book}");
        b4._Row();
        b4.Row_(1);
        b4.Text("\\usepackage{latexsym}");
        b4._Row();
        b4.Row_(1);
        b4.Text("\\usepackage{hyperref}");
        b4._Row();
        b4.Row_(1);
        b4.Text("\\usepackage{listings}");
        b4._Row();
        b4.Row_(1);
        b4.Text("\\usepackage{float}");
        b4._Row();
        b4.Row_(1);
        b4.Text("\\usepackage[normalem]{ulem}");
        b4._Row();
        b4.Row_(1);
        b4.Text("\\usepackage{graphicx}");
        b4._Row();
        b4.Row_(1);
        b4.Text("\\usepackage{alltt}");
        b4._Row();
        b4.Row_(1);
        b4.Text("\\usepackage{framed}");
        b4._Row();
        b4.Row_(1);
        b4.Text("\\usepackage[utf8]{inputenc}");
        b4._Row();
        b4.Row_(1);
        b4.Text("\\lstset{basicstyle=\\ttfamily}");
        b4._Row();
        b4.Row_(4);
        b4.Text("\\author{");
        b1.Variable_();
        b1.VarType("http://lang.whole.org/Text#Text");
        b1.VarName("firstAuthor");
        b1.Quantifier("!");
        b1._Variable();
        b1.InlineVariable_();
        b1.VarType("http://lang.whole.org/Text#Text");
        b1.VarName("moreAuthor");
        b1.Quantifier("*");
        b1._InlineVariable();
        b4.Text("}");
        b4._Row();
        b4.Row_(3);
        b4.Text("\\title{");
        b1.Variable_();
        b1.VarType("http://lang.whole.org/Text#Text");
        b1.VarName("title");
        b1.Quantifier("!");
        b1._Variable();
        b4.Text("}");
        b4._Row();
        b4.Row_(1);
        b4.Text("\\frenchspacing");
        b4._Row();
        b4.Row_(1);
        b4.Text("\\begin{document}");
        b4._Row();
        b4.Row_(1);
        b4.Text("\\maketitle");
        b4._Row();
        b4.Row_(1);
        b4.Text("\\tableofcontents");
        b4._Row();
        b1.InlineVariable_();
        b1.VarType("http://lang.whole.org/Text#IRow");
        b1.VarName("chapter");
        b1.Quantifier("*");
        b1._InlineVariable();
        b4.Row_(1);
        b4.Text("\\end{document}");
        b4._Row();
        b4._Document();
        b1._StageUpFragment();
        b6._FileArtifact();
        b6._Artifacts();
        b6._PackageArtifact();
        b6._Artifacts();
        b6._FolderArtifact();
        b6._Artifacts();
        b1.Resolver();
        b6._Project();
        b6._Projects();
        b6._Workspace();
        b1._StageUpFragment();
        b2.Path_(2);
        b2.Filter_();
        b2.SelfStep();
        b2.TypeTest("whole:org.whole.lang.mediawiki:MediaWiki#Wiki");
        b2._Filter();
        b1.SameStageFragment_();
        b3.Sequence_();
        b3.Text("sequence");
        b3.FlowObjects_(2);
        b3.InvokeJavaClassMethod_();
        b3.Text("cloneSelf");
        b3.Variable("clonedSelf");
        b1.Resolver();
        b3.StringLiteral("org.whole.lang.util.EntityUtils");
        b3.StringLiteral("clone(org.whole.lang.model.IEntity)");
        b3.Expressions_(1);
        b3.Variable("self");
        b3._Expressions();
        b3._InvokeJavaClassMethod();
        b3.InvokeOperation_();
        b3.Text("invoke Normalizer");
        b3.Variable("clonedSelf");
        b3.Operation("NORMALIZER");
        b1.Resolver();
        b3._InvokeOperation();
        b3._FlowObjects();
        b3._Sequence();
        b1._SameStageFragment();
        b2._Path();
        b2.Sequence_(4);
        b2.Path_(2);
        b2.FeatureStep("authors");
        b2.Filter_();
        b2.ChildStep();
        b2.And_(2);
        b2.IndexTest_();
        b2.IntLiteral(0);
        b2._IndexTest();
        b2.VariableTest("firstAuthor");
        b2._And();
        b2._Filter();
        b2._Path();
        b2.Select_();
        b2.Filter_();
        b1.StageUpFragment_();
        b4.Row_(2);
        b4.Text(" \\and ");
        b1.Variable_();
        b1.VarType("http://lang.whole.org/Text#Text");
        b1.VarName("author");
        b1.Quantifier("!");
        b1._Variable();
        b4._Row();
        b1._StageUpFragment();
        b2.VariableTest("moreAuthor");
        b2._Filter();
        b2.Path_(2);
        b2.FeatureStep("authors");
        b2.Filter_();
        b2.ChildStep();
        b2.And_(2);
        b2.IndexRangeTest_();
        b2.IntLiteral(1);
        b1.Resolver();
        b2._IndexRangeTest();
        b2.VariableTest("author");
        b2._And();
        b2._Filter();
        b2._Path();
        b1.Resolver();
        b2.TemplateNames();
        b2._Select();
        b2.Filter_();
        b2.FeatureStep("title");
        b2.VariableTest("title");
        b2._Filter();
        b2.Select_();
        b2.Filter_();
        b1.StageUpFragment_();
        b4.Document_(3);
        b4.Row_(3);
        b4.Text("\\chapter{");
        b1.Variable_();
        b1.VarType("http://lang.whole.org/Text#Text");
        b1.VarName("chapterTitle");
        b1.Quantifier("!");
        b1._Variable();
        b4.Text("}");
        b4._Row();
        b4.Row_(3);
        b4.Text("\\label{chap:");
        b1.Variable_();
        b1.VarType("http://lang.whole.org/Text#Text");
        b1.VarName("chapterTitle");
        b1.Quantifier("!");
        b1._Variable();
        b4.Text("}");
        b4._Row();
        b1.InlineVariable_();
        b1.VarType("http://lang.whole.org/Text#IRow");
        b1.VarName("chapterContent");
        b1.Quantifier("*");
        b1._InlineVariable();
        b4._Document();
        b1._StageUpFragment();
        b2.VariableTest("chapter");
        b2._Filter();
        b2.Path_(2);
        b2.FeatureStep("wikiPages");
        b2.ChildStep();
        b2._Path();
        b2.Sequence_(2);
        b2.Path_(2);
        b2.FeatureStep("title");
        b2.Filter_();
        b2.Call_();
        b2.Name("escapeLabel");
        b1.Resolver();
        b2._Call();
        b2.VariableTest("chapterTitle");
        b2._Filter();
        b2._Path();
        b2.Path_(4);
        b2.FeatureStep("article");
        b2.FeatureStep("blocks");
        b2.ChildStep();
        b2.Filter_();
        b2.Call_();
        b2.Name("mapBlock");
        b1.Resolver();
        b2._Call();
        b2.VariableTest("chapterContent");
        b2._Filter();
        b2._Path();
        b2._Sequence();
        b2.TemplateNames();
        b2._Select();
        b2._Sequence();
        b2.TemplateNames();
        b2._Select();
        b2._Block();
        b0._SimpleAction();
        b0._ToolbarActions();
        b0.ContextMenuActions_();
        b0.MenuActions_(0);
        b0._MenuActions();
        b0.MenuActions_(0);
        b0._MenuActions();
        b0.MenuActions_(0);
        b0._MenuActions();
        b0.MenuActions_(0);
        b0._MenuActions();
        b0.MenuActions_(0);
        b0._MenuActions();
        b1.Resolver();
        b0._ContextMenuActions();
        b0._LanguageActionFactory();
    }
}
