package org.whole.lang.xsd.codebase;

import org.whole.lang.builders.IBuilderOperation;
import org.whole.lang.templates.AbstractTemplateFactory;

public class SchemaMapping extends AbstractTemplateFactory<org.whole.lang.xsd.mapping.model.MappingStrategy> {

    public void apply(IBuilderOperation op) {
        org.whole.lang.xsd.mapping.builders.IMappingBuilder b0 = (org.whole.lang.xsd.mapping.builders.IMappingBuilder) op.wGetBuilder(org.whole.lang.xsd.mapping.reflect.MappingLanguageKit.URI);
        b0.MappingStrategy_();
        b0.URI("http://www.w3.org/2001/XMLSchema");
        b0.URI("http://www.w3.org/2001/XMLSchema.xsd");
        b0.BooleanType(false);
        b0.BooleanType(true);
        b0.BooleanType(false);
        b0.URI("MixedText");
        b0.Types_(1);
        b0.URI("AnnotationContents");
        b0._Types();
        b0.Mappings_(398);
        b0.MixedStructuralMapping_();
        b0.URI("Documentation");
        b0.URI("AnnotationContents");
        b0.URI("content");
        b0._MixedStructuralMapping();
        b0.MixedStructuralMapping_();
        b0.URI("Appinfo");
        b0.URI("AnnotationContents");
        b0.URI("content");
        b0._MixedStructuralMapping();
        b0.RootMapping_();
        b0.NCName("schema");
        b0.URI("Schema");
        b0._RootMapping();
        b0.ElementMapping_();
        b0.URI("SchemaComponents");
        b0.NCName("element");
        b0.URI("ElementDecl");
        org.whole.lang.commons.builders.ICommonsBuilder b1 = (org.whole.lang.commons.builders.ICommonsBuilder) op.wGetBuilder(org.whole.lang.commons.reflect.CommonsLanguageKit.URI);
        b1.Resolver();
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("SchemaComponents");
        b0.NCName("attribute");
        b0.URI("AttributeDecl");
        b1.Resolver();
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("SchemaComponents");
        b0.NCName("complexType");
        b0.URI("ComplexTypeDef");
        b1.Resolver();
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("SchemaComponents");
        b0.NCName("simpleType");
        b0.URI("SimpleTypeDef");
        b1.Resolver();
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("SchemaComponents");
        b0.NCName("attributeGroup");
        b0.URI("AttributeGroupDef");
        b1.Resolver();
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("SchemaComponents");
        b0.NCName("group");
        b0.URI("ModelGroupDef");
        b1.Resolver();
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("SchemaComponents");
        b0.NCName("notation");
        b0.URI("NotationDecl");
        b1.Resolver();
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("SchemaComponents");
        b0.NCName("annotation");
        b0.URI("Annotation");
        b1.Resolver();
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("SchemaDirectives");
        b0.NCName("include");
        b0.URI("Include");
        b1.Resolver();
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("SchemaDirectives");
        b0.NCName("redefine");
        b0.URI("Redefine");
        b1.Resolver();
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("SchemaDirectives");
        b0.NCName("import");
        b0.URI("Import");
        b1.Resolver();
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("SchemaDirectives");
        b0.NCName("annotation");
        b0.URI("Annotation");
        b1.Resolver();
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("RedefineComponents");
        b0.NCName("complexType");
        b0.URI("ComplexTypeDef");
        b1.Resolver();
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("RedefineComponents");
        b0.NCName("simpleType");
        b0.URI("SimpleTypeDef");
        b1.Resolver();
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("RedefineComponents");
        b0.NCName("group");
        b0.URI("ModelGroupDef");
        b1.Resolver();
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("RedefineComponents");
        b0.NCName("attributeGroup");
        b0.URI("AttributeGroupDef");
        b1.Resolver();
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("RedefineComponents");
        b0.NCName("annotation");
        b0.URI("Annotation");
        b1.Resolver();
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("AnnotationList");
        b0.NCName("documentation");
        b0.URI("Documentation");
        b1.Resolver();
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("AnnotationList");
        b0.NCName("appinfo");
        b0.URI("Appinfo");
        b1.Resolver();
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("ComplexTypeDef");
        b0.NCName("complexContent");
        b0.URI("ComplexContent");
        b0.URI("content");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("ComplexTypeDef");
        b0.NCName("simpleContent");
        b0.URI("SimpleContent");
        b0.URI("content");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("DeclaredContent");
        b0.NCName("all");
        b0.URI("All");
        b0.URI("modelGroup");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("DeclaredContent");
        b0.NCName("sequence");
        b0.URI("Sequence");
        b0.URI("modelGroup");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("DeclaredContent");
        b0.NCName("choice");
        b0.URI("Choice");
        b0.URI("modelGroup");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("DeclaredContent");
        b0.NCName("group");
        b0.URI("ModelGroupDef");
        b0.URI("modelGroup");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("DeclaredContent");
        b0.NCName("anyAttribute");
        b0.URI("AnyAttribute");
        b0.URI("anyAttribute");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("ComplexContent");
        b0.NCName("extension");
        b0.URI("ComplexExtension");
        b0.URI("derivation");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("ComplexContent");
        b0.NCName("restriction");
        b0.URI("ComplexRestriction");
        b0.URI("derivation");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("SimpleContent");
        b0.NCName("extension");
        b0.URI("SimpleExtension");
        b0.URI("derivation");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("SimpleContent");
        b0.NCName("restriction");
        b0.URI("SimpleRestriction");
        b0.URI("derivation");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("SimpleRestriction");
        b0.NCName("simpleType");
        b0.URI("SimpleTypeDef");
        b0.URI("baseDef");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("SimpleRestriction");
        b0.NCName("anyAttribute");
        b0.URI("AnyAttribute");
        b0.URI("anyAttribute");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("AttributeUseOrGroups");
        b0.NCName("attribute");
        b0.URI("AttributeUseDecl");
        b1.Resolver();
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("AttributeUseOrGroups");
        b0.NCName("attributeGroup");
        b0.URI("AttributeGroupDef");
        b1.Resolver();
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("ModelGroupDef");
        b0.NCName("all");
        b0.URI("All");
        b0.URI("modelGroup");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("ModelGroupDef");
        b0.NCName("sequence");
        b0.URI("Sequence");
        b0.URI("modelGroup");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("ModelGroupDef");
        b0.NCName("choice");
        b0.URI("Choice");
        b0.URI("modelGroup");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("Particles");
        b0.NCName("element");
        b0.URI("ElementDecl");
        b1.Resolver();
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("Particles");
        b0.NCName("group");
        b0.URI("ModelGroupDef");
        b1.Resolver();
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("Particles");
        b0.NCName("choice");
        b0.URI("Choice");
        b1.Resolver();
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("Particles");
        b0.NCName("sequence");
        b0.URI("Sequence");
        b1.Resolver();
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("Particles");
        b0.NCName("all");
        b0.URI("All");
        b1.Resolver();
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("Particles");
        b0.NCName("any");
        b0.URI("Any");
        b1.Resolver();
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("ElementDecl");
        b0.NCName("simpleType");
        b0.URI("SimpleTypeDef");
        b0.URI("typeDef");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("ElementDecl");
        b0.NCName("complexType");
        b0.URI("ComplexTypeDef");
        b0.URI("typeDef");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("IdentityConstraintDefs");
        b0.NCName("unique");
        b0.URI("Unique");
        b1.Resolver();
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("IdentityConstraintDefs");
        b0.NCName("key");
        b0.URI("Key");
        b1.Resolver();
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("IdentityConstraintDefs");
        b0.NCName("keyref");
        b0.URI("Keyref");
        b1.Resolver();
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("AttributeDecl");
        b0.NCName("simpleType");
        b0.URI("SimpleTypeDef");
        b0.URI("simpleTypeDef");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("AttributeUseDecl");
        b0.NCName("simpleType");
        b0.URI("SimpleTypeDef");
        b0.URI("simpleTypeDef");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("SimpleTypeDef");
        b0.NCName("restriction");
        b0.URI("SimpleTypeRestriction");
        b0.URI("content");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("SimpleTypeDef");
        b0.NCName("union");
        b0.URI("Union");
        b0.URI("content");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("SimpleTypeDef");
        b0.NCName("list");
        b0.URI("List");
        b0.URI("content");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("SimpleTypeDefs");
        b0.NCName("simpleType");
        b0.URI("SimpleTypeDef");
        b1.Resolver();
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("Facets");
        b0.NCName("length");
        b0.URI("Length");
        b1.Resolver();
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("Facets");
        b0.NCName("minLength");
        b0.URI("MinLength");
        b1.Resolver();
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("Facets");
        b0.NCName("maxLength");
        b0.URI("MaxLength");
        b1.Resolver();
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("Facets");
        b0.NCName("pattern");
        b0.URI("Pattern");
        b1.Resolver();
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("Facets");
        b0.NCName("enumeration");
        b0.URI("Enumeration");
        b1.Resolver();
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("Facets");
        b0.NCName("whiteSpace");
        b0.URI("WhiteSpace");
        b1.Resolver();
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("Facets");
        b0.NCName("minInclusive");
        b0.URI("MinInclusive");
        b1.Resolver();
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("Facets");
        b0.NCName("maxInclusive");
        b0.URI("MaxInclusive");
        b1.Resolver();
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("Facets");
        b0.NCName("minExclusive");
        b0.URI("MinExclusive");
        b1.Resolver();
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("Facets");
        b0.NCName("maxExclusive");
        b0.URI("MaxExclusive");
        b1.Resolver();
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("Facets");
        b0.NCName("totalDigits");
        b0.URI("TotalDigits");
        b1.Resolver();
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("Facets");
        b0.NCName("fractionDigits");
        b0.URI("FractionDigits");
        b1.Resolver();
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("AttributeGroupDef");
        b0.NCName("anyAttribute");
        b0.URI("AnyAttribute");
        b0.URI("anyAttribute");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("List");
        b0.NCName("simpleType");
        b0.URI("SimpleTypeDef");
        b0.URI("itemTypeDef");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("Include");
        b0.NCName("annotation");
        b0.URI("Annotation");
        b0.URI("annotation");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("Redefine");
        b0.NCName("annotation");
        b0.URI("Annotation");
        b0.URI("annotation");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("Import");
        b0.NCName("annotation");
        b0.URI("Annotation");
        b0.URI("annotation");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("NotationDecl");
        b0.NCName("annotation");
        b0.URI("Annotation");
        b0.URI("annotation");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("ElementDecl");
        b0.NCName("annotation");
        b0.URI("Annotation");
        b0.URI("annotation");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("ElementRef");
        b0.NCName("annotation");
        b0.URI("Annotation");
        b0.URI("annotation");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("XPathExpression");
        b0.NCName("annotation");
        b0.URI("Annotation");
        b0.URI("annotation");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("Selector");
        b0.NCName("annotation");
        b0.URI("Annotation");
        b0.URI("annotation");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("Field");
        b0.NCName("annotation");
        b0.URI("Annotation");
        b0.URI("annotation");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("IdentityConstraintDef");
        b0.NCName("annotation");
        b0.URI("Annotation");
        b0.URI("annotation");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("Unique");
        b0.NCName("annotation");
        b0.URI("Annotation");
        b0.URI("annotation");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("Key");
        b0.NCName("annotation");
        b0.URI("Annotation");
        b0.URI("annotation");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("Keyref");
        b0.NCName("annotation");
        b0.URI("Annotation");
        b0.URI("annotation");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("SimpleTypeContent");
        b0.NCName("annotation");
        b0.URI("Annotation");
        b0.URI("annotation");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("SimpleTypeDef");
        b0.NCName("annotation");
        b0.URI("Annotation");
        b0.URI("annotation");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("ComplexTypeDef");
        b0.NCName("annotation");
        b0.URI("Annotation");
        b0.URI("annotation");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("AttributeDecl");
        b0.NCName("annotation");
        b0.URI("Annotation");
        b0.URI("annotation");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("AttributeUseDecl");
        b0.NCName("annotation");
        b0.URI("Annotation");
        b0.URI("annotation");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("AttributeUseRef");
        b0.NCName("annotation");
        b0.URI("Annotation");
        b0.URI("annotation");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("AnyAttribute");
        b0.NCName("annotation");
        b0.URI("Annotation");
        b0.URI("annotation");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("AttributeGroupDef");
        b0.NCName("annotation");
        b0.URI("Annotation");
        b0.URI("annotation");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("AttributeGroupRef");
        b0.NCName("annotation");
        b0.URI("Annotation");
        b0.URI("annotation");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("ModelGroup");
        b0.NCName("annotation");
        b0.URI("Annotation");
        b0.URI("annotation");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("ModelGroupDef");
        b0.NCName("annotation");
        b0.URI("Annotation");
        b0.URI("annotation");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("ModelGroupRef");
        b0.NCName("annotation");
        b0.URI("Annotation");
        b0.URI("annotation");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("Particle");
        b0.NCName("annotation");
        b0.URI("Annotation");
        b0.URI("annotation");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("List");
        b0.NCName("annotation");
        b0.URI("Annotation");
        b0.URI("annotation");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("Union");
        b0.NCName("annotation");
        b0.URI("Annotation");
        b0.URI("annotation");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("SimpleTypeRestriction");
        b0.NCName("annotation");
        b0.URI("Annotation");
        b0.URI("annotation");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("SimpleTypeRestriction");
        b0.NCName("simpleType");
        b0.URI("SimpleTypeDef");
        b0.URI("baseDef");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("Facet");
        b0.NCName("annotation");
        b0.URI("Annotation");
        b0.URI("annotation");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("StringFacet");
        b0.NCName("annotation");
        b0.URI("Annotation");
        b0.URI("annotation");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("FixedFacet");
        b0.NCName("annotation");
        b0.URI("Annotation");
        b0.URI("annotation");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("IntegerFacet");
        b0.NCName("annotation");
        b0.URI("Annotation");
        b0.URI("annotation");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("WhiteSpace");
        b0.NCName("annotation");
        b0.URI("Annotation");
        b0.URI("annotation");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("Length");
        b0.NCName("annotation");
        b0.URI("Annotation");
        b0.URI("annotation");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("MinLength");
        b0.NCName("annotation");
        b0.URI("Annotation");
        b0.URI("annotation");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("MaxLength");
        b0.NCName("annotation");
        b0.URI("Annotation");
        b0.URI("annotation");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("MinInclusive");
        b0.NCName("annotation");
        b0.URI("Annotation");
        b0.URI("annotation");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("MaxInclusive");
        b0.NCName("annotation");
        b0.URI("Annotation");
        b0.URI("annotation");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("MinExclusive");
        b0.NCName("annotation");
        b0.URI("Annotation");
        b0.URI("annotation");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("MaxExclusive");
        b0.NCName("annotation");
        b0.URI("Annotation");
        b0.URI("annotation");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("TotalDigits");
        b0.NCName("annotation");
        b0.URI("Annotation");
        b0.URI("annotation");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("FractionDigits");
        b0.NCName("annotation");
        b0.URI("Annotation");
        b0.URI("annotation");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("Pattern");
        b0.NCName("annotation");
        b0.URI("Annotation");
        b0.URI("annotation");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("Enumeration");
        b0.NCName("annotation");
        b0.URI("Annotation");
        b0.URI("annotation");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("SimpleContent");
        b0.NCName("annotation");
        b0.URI("Annotation");
        b0.URI("annotation");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("ComplexDerivation");
        b0.NCName("annotation");
        b0.URI("Annotation");
        b0.URI("annotation");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("ComplexRestriction");
        b0.NCName("annotation");
        b0.URI("Annotation");
        b0.URI("annotation");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("ComplexExtension");
        b0.NCName("annotation");
        b0.URI("Annotation");
        b0.URI("annotation");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("SimpleDerivation");
        b0.NCName("annotation");
        b0.URI("Annotation");
        b0.URI("annotation");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("SimpleRestriction");
        b0.NCName("annotation");
        b0.URI("Annotation");
        b0.URI("annotation");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("SimpleExtension");
        b0.NCName("annotation");
        b0.URI("Annotation");
        b0.URI("annotation");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("ComplexContent");
        b0.NCName("annotation");
        b0.URI("Annotation");
        b0.URI("annotation");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("ModelGroupWithParticles");
        b0.NCName("annotation");
        b0.URI("Annotation");
        b0.URI("annotation");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("Sequence");
        b0.NCName("annotation");
        b0.URI("Annotation");
        b0.URI("annotation");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("Choice");
        b0.NCName("annotation");
        b0.URI("Annotation");
        b0.URI("annotation");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("All");
        b0.NCName("annotation");
        b0.URI("Annotation");
        b0.URI("annotation");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("Any");
        b0.NCName("annotation");
        b0.URI("Annotation");
        b0.URI("annotation");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("Annotated");
        b0.NCName("annotation");
        b0.URI("Annotation");
        b0.URI("annotation");
        b0._ElementMapping();
        b0.AttributeMapping_();
        b0.URI("Schema");
        b0.NCName("targetNamespace");
        b0.URI("AnyURI");
        b0.URI("targetNamespace");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("Schema");
        b0.NCName("attributeFormDefault");
        b0.URI("Qualify");
        b0.URI("attributeFormDefault");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("Schema");
        b0.NCName("elementFormDefault");
        b0.URI("Qualify");
        b0.URI("elementFormDefault");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("Schema");
        b0.NCName("version");
        b0.URI("StringData");
        b0.URI("version");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("Schema");
        b0.NCName("blockDefault");
        b0.URI("DerivationSet");
        b0.URI("blockDefault");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("Schema");
        b0.NCName("finalDefault");
        b0.URI("DerivationSet");
        b0.URI("finalDefault");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("Include");
        b0.NCName("schemaLocation");
        b0.URI("AnyURI");
        b0.URI("schemaLocation");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("Redefine");
        b0.NCName("schemaLocation");
        b0.URI("AnyURI");
        b0.URI("schemaLocation");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("Import");
        b0.NCName("namespace");
        b0.URI("AnyURI");
        b0.URI("namespace");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("Import");
        b0.NCName("schemaLocation");
        b0.URI("AnyURI");
        b0.URI("schemaLocation");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("Appinfo");
        b0.NCName("source");
        b0.URI("AnyURI");
        b0.URI("source");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("NotationDecl");
        b0.NCName("public");
        b0.URI("StringData");
        b0.URI("public");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("NotationDecl");
        b0.NCName("system");
        b0.URI("AnyURI");
        b0.URI("system");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("Documentation");
        b0.NCName("source");
        b0.URI("AnyURI");
        b0.URI("source");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("ComplexTypeDef");
        b0.NCName("abstract");
        b0.URI("BooleanData");
        b0.URI("abstract");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("ComplexTypeDef");
        b0.NCName("mixed");
        b0.URI("BooleanData");
        b0.URI("mixed");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("ComplexContent");
        b0.NCName("mixed");
        b0.URI("BooleanData");
        b0.URI("mixed");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("ElementDecl");
        b0.NCName("name");
        b0.URI("Name");
        b0.URI("name");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("ComplexTypeDef");
        b0.NCName("name");
        b0.URI("Name");
        b0.URI("name");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("SimpleTypeDef");
        b0.NCName("name");
        b0.URI("Name");
        b0.URI("name");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("ModelGroupDef");
        b0.NCName("name");
        b0.URI("Name");
        b0.URI("name");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("AttributeDecl");
        b0.NCName("name");
        b0.URI("Name");
        b0.URI("name");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("AttributeUseDecl");
        b0.NCName("name");
        b0.URI("Name");
        b0.URI("name");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("AttributeGroupDef");
        b0.NCName("name");
        b0.URI("Name");
        b0.URI("name");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("NotationDecl");
        b0.NCName("name");
        b0.URI("Name");
        b0.URI("name");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("Unique");
        b0.NCName("name");
        b0.URI("Name");
        b0.URI("name");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("Key");
        b0.NCName("name");
        b0.URI("Name");
        b0.URI("name");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("Keyref");
        b0.NCName("name");
        b0.URI("Name");
        b0.URI("name");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("ElementDecl");
        b0.NCName("abstract");
        b0.URI("BooleanData");
        b0.URI("abstract");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("ElementDecl");
        b0.NCName("substitutionGroup");
        b0.URI("QName");
        b0.URI("substitutionGroup");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("ElementDecl");
        b0.NCName("nillable");
        b0.URI("BooleanData");
        b0.URI("nillable");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("ElementDecl");
        b0.NCName("form");
        b0.URI("Qualify");
        b0.URI("form");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("AttributeUseDecl");
        b0.NCName("form");
        b0.URI("Qualify");
        b0.URI("form");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("ElementDecl");
        b0.NCName("type");
        b0.URI("QName");
        b0.URI("type");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("AttributeDecl");
        b0.NCName("type");
        b0.URI("QName");
        b0.URI("simpleType");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("List");
        b0.NCName("itemType");
        b0.URI("QName");
        b0.URI("itemType");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("Union");
        b0.NCName("memberTypes");
        b0.URI("MemberTypes");
        b0.URI("memberTypes");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("SimpleRestriction");
        b0.NCName("base");
        b0.URI("QName");
        b0.URI("base");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("ComplexExtension");
        b0.NCName("base");
        b0.URI("QName");
        b0.URI("base");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("ComplexRestriction");
        b0.NCName("base");
        b0.URI("QName");
        b0.URI("base");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("SimpleExtension");
        b0.NCName("base");
        b0.URI("QName");
        b0.URI("base");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("SimpleTypeRestriction");
        b0.NCName("base");
        b0.URI("QName");
        b0.URI("base");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("AttributeUseDecl");
        b0.NCName("type");
        b0.URI("QName");
        b0.URI("simpleType");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("Any");
        b0.NCName("processContents");
        b0.URI("ProcessContents");
        b0.URI("processContents");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("AnyAttribute");
        b0.NCName("processContents");
        b0.URI("ProcessContents");
        b0.URI("processContents");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("Any");
        b0.NCName("namespace");
        b0.URI("NamespaceSpecs");
        b0.URI("namespaceSpecs");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("AnyAttribute");
        b0.NCName("namespace");
        b0.URI("NamespaceSpecs");
        b0.URI("namespaceSpecs");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("ElementDecl");
        b0.NCName("block");
        b0.URI("DerivationSet");
        b0.URI("block");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("ElementDecl");
        b0.NCName("final");
        b0.URI("DerivationSet");
        b0.URI("final");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("ComplexTypeDef");
        b0.NCName("block");
        b0.URI("DerivationSet");
        b0.URI("block");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("ComplexTypeDef");
        b0.NCName("final");
        b0.URI("DerivationSet");
        b0.URI("final");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("SimpleTypeDef");
        b0.NCName("final");
        b0.URI("DerivationSet");
        b0.URI("final");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("ModelGroupRef");
        b0.NCName("ref");
        b0.URI("QName");
        b0.URI("ref");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("ElementRef");
        b0.NCName("ref");
        b0.URI("QName");
        b0.URI("ref");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("AttributeUseRef");
        b0.NCName("ref");
        b0.URI("QName");
        b0.URI("ref");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("AttributeGroupRef");
        b0.NCName("ref");
        b0.URI("QName");
        b0.URI("ref");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("AttributeUseDecl");
        b0.NCName("use");
        b0.URI("Use");
        b0.URI("use");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("AttributeUseRef");
        b0.NCName("use");
        b0.URI("Use");
        b0.URI("use");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("AttributeDecl");
        b0.NCName("default");
        b0.URI("StringData");
        b0.URI("defaultValue");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("AttributeDecl");
        b0.NCName("fixed");
        b0.URI("StringData");
        b0.URI("fixedValue");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("AttributeUseDecl");
        b0.NCName("default");
        b0.URI("StringData");
        b0.URI("defaultValue");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("AttributeUseDecl");
        b0.NCName("fixed");
        b0.URI("StringData");
        b0.URI("fixedValue");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("ElementDecl");
        b0.NCName("default");
        b0.URI("StringData");
        b0.URI("defaultValue");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("ElementDecl");
        b0.NCName("fixed");
        b0.URI("StringData");
        b0.URI("fixedValue");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("ElementDecl");
        b0.NCName("minOccurs");
        b0.URI("Bounded");
        b0.URI("minOccurs");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("ElementDecl");
        b0.NCName("maxOccurs");
        b0.URI("Bounded");
        b0.URI("maxOccurs");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("ElementDecl");
        b0.NCName("maxOccurs");
        b0.URI("Unbounded");
        b0.URI("maxOccurs");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("ElementRef");
        b0.NCName("minOccurs");
        b0.URI("Bounded");
        b0.URI("minOccurs");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("ElementRef");
        b0.NCName("maxOccurs");
        b0.URI("Bounded");
        b0.URI("maxOccurs");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("ElementRef");
        b0.NCName("maxOccurs");
        b0.URI("Unbounded");
        b0.URI("maxOccurs");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("Choice");
        b0.NCName("minOccurs");
        b0.URI("Bounded");
        b0.URI("minOccurs");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("Choice");
        b0.NCName("maxOccurs");
        b0.URI("Bounded");
        b0.URI("maxOccurs");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("Choice");
        b0.NCName("maxOccurs");
        b0.URI("Unbounded");
        b0.URI("maxOccurs");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("Sequence");
        b0.NCName("minOccurs");
        b0.URI("Bounded");
        b0.URI("minOccurs");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("Sequence");
        b0.NCName("maxOccurs");
        b0.URI("Bounded");
        b0.URI("maxOccurs");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("Sequence");
        b0.NCName("maxOccurs");
        b0.URI("Unbounded");
        b0.URI("maxOccurs");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("ModelGroupRef");
        b0.NCName("minOccurs");
        b0.URI("Bounded");
        b0.URI("minOccurs");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("ModelGroupRef");
        b0.NCName("maxOccurs");
        b0.URI("Bounded");
        b0.URI("maxOccurs");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("ModelGroupRef");
        b0.NCName("maxOccurs");
        b0.URI("Unbounded");
        b0.URI("maxOccurs");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("Any");
        b0.NCName("minOccurs");
        b0.URI("Bounded");
        b0.URI("minOccurs");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("Any");
        b0.NCName("maxOccurs");
        b0.URI("Bounded");
        b0.URI("maxOccurs");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("Any");
        b0.NCName("maxOccurs");
        b0.URI("Unbounded");
        b0.URI("maxOccurs");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("Length");
        b0.NCName("fixed");
        b0.URI("BooleanData");
        b0.URI("fixed");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("MinLength");
        b0.NCName("fixed");
        b0.URI("BooleanData");
        b0.URI("fixed");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("MaxLength");
        b0.NCName("fixed");
        b0.URI("BooleanData");
        b0.URI("fixed");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("MinInclusive");
        b0.NCName("fixed");
        b0.URI("BooleanData");
        b0.URI("fixed");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("MaxInclusive");
        b0.NCName("fixed");
        b0.URI("BooleanData");
        b0.URI("fixed");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("MinExclusive");
        b0.NCName("fixed");
        b0.URI("BooleanData");
        b0.URI("fixed");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("MaxExclusive");
        b0.NCName("fixed");
        b0.URI("BooleanData");
        b0.URI("fixed");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("TotalDigits");
        b0.NCName("fixed");
        b0.URI("BooleanData");
        b0.URI("fixed");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("FractionDigits");
        b0.NCName("fixed");
        b0.URI("BooleanData");
        b0.URI("fixed");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("WhiteSpace");
        b0.NCName("fixed");
        b0.URI("BooleanData");
        b0.URI("fixed");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("Length");
        b0.NCName("value");
        b0.URI("IntegerData");
        b0.URI("value");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("MinLength");
        b0.NCName("value");
        b0.URI("IntegerData");
        b0.URI("value");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("MaxLength");
        b0.NCName("value");
        b0.URI("IntegerData");
        b0.URI("value");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("MinInclusive");
        b0.NCName("value");
        b0.URI("StringData");
        b0.URI("value");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("MaxInclusive");
        b0.NCName("value");
        b0.URI("StringData");
        b0.URI("value");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("MinExclusive");
        b0.NCName("value");
        b0.URI("StringData");
        b0.URI("value");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("MaxExclusive");
        b0.NCName("value");
        b0.URI("StringData");
        b0.URI("value");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("TotalDigits");
        b0.NCName("value");
        b0.URI("IntegerData");
        b0.URI("value");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("FractionDigits");
        b0.NCName("value");
        b0.URI("IntegerData");
        b0.URI("value");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("WhiteSpace");
        b0.NCName("value");
        b0.URI("WhiteSpaceProcessing");
        b0.URI("value");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("Pattern");
        b0.NCName("value");
        b0.URI("StringData");
        b0.URI("value");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("Enumeration");
        b0.NCName("value");
        b0.URI("StringData");
        b0.URI("value");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("Schema");
        b0.NCName("id");
        b0.URI("StringData");
        b0.URI("id");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("SchemaDirective");
        b0.NCName("id");
        b0.URI("StringData");
        b0.URI("id");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("Include");
        b0.NCName("id");
        b0.URI("StringData");
        b0.URI("id");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("Redefine");
        b0.NCName("id");
        b0.URI("StringData");
        b0.URI("id");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("Import");
        b0.NCName("id");
        b0.URI("StringData");
        b0.URI("id");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("Annotation");
        b0.NCName("id");
        b0.URI("StringData");
        b0.URI("id");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("AnnotationType");
        b0.NCName("id");
        b0.URI("StringData");
        b0.URI("id");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("Appinfo");
        b0.NCName("id");
        b0.URI("StringData");
        b0.URI("id");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("Documentation");
        b0.NCName("id");
        b0.URI("StringData");
        b0.URI("id");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("NotationDecl");
        b0.NCName("id");
        b0.URI("StringData");
        b0.URI("id");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("ElementDecl");
        b0.NCName("id");
        b0.URI("StringData");
        b0.URI("id");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("ElementRef");
        b0.NCName("id");
        b0.URI("StringData");
        b0.URI("id");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("XPathExpression");
        b0.NCName("id");
        b0.URI("StringData");
        b0.URI("id");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("Selector");
        b0.NCName("id");
        b0.URI("StringData");
        b0.URI("id");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("Field");
        b0.NCName("id");
        b0.URI("StringData");
        b0.URI("id");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("IdentityConstraintDef");
        b0.NCName("id");
        b0.URI("StringData");
        b0.URI("id");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("Unique");
        b0.NCName("id");
        b0.URI("StringData");
        b0.URI("id");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("Key");
        b0.NCName("id");
        b0.URI("StringData");
        b0.URI("id");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("Keyref");
        b0.NCName("id");
        b0.URI("StringData");
        b0.URI("id");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("TypeDef");
        b0.NCName("id");
        b0.URI("StringData");
        b0.URI("id");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("SimpleTypeContent");
        b0.NCName("id");
        b0.URI("StringData");
        b0.URI("id");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("SimpleTypeDef");
        b0.NCName("id");
        b0.URI("StringData");
        b0.URI("id");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("ComplexTypeDef");
        b0.NCName("id");
        b0.URI("StringData");
        b0.URI("id");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("AttributeDecl");
        b0.NCName("id");
        b0.URI("StringData");
        b0.URI("id");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("AttributeUseDecl");
        b0.NCName("id");
        b0.URI("StringData");
        b0.URI("id");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("AttributeUseRef");
        b0.NCName("id");
        b0.URI("StringData");
        b0.URI("id");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("AnyAttribute");
        b0.NCName("id");
        b0.URI("StringData");
        b0.URI("id");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("AttributeGroupDef");
        b0.NCName("id");
        b0.URI("StringData");
        b0.URI("id");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("AttributeGroupRef");
        b0.NCName("id");
        b0.URI("StringData");
        b0.URI("id");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("ModelGroup");
        b0.NCName("id");
        b0.URI("StringData");
        b0.URI("id");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("ModelGroupDef");
        b0.NCName("id");
        b0.URI("StringData");
        b0.URI("id");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("ModelGroupRef");
        b0.NCName("id");
        b0.URI("StringData");
        b0.URI("id");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("Particle");
        b0.NCName("id");
        b0.URI("StringData");
        b0.URI("id");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("List");
        b0.NCName("id");
        b0.URI("StringData");
        b0.URI("id");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("Union");
        b0.NCName("id");
        b0.URI("StringData");
        b0.URI("id");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("SimpleTypeRestriction");
        b0.NCName("id");
        b0.URI("StringData");
        b0.URI("id");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("Facet");
        b0.NCName("id");
        b0.URI("StringData");
        b0.URI("id");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("StringFacet");
        b0.NCName("id");
        b0.URI("StringData");
        b0.URI("id");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("FixedFacet");
        b0.NCName("id");
        b0.URI("StringData");
        b0.URI("id");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("IntegerFacet");
        b0.NCName("id");
        b0.URI("StringData");
        b0.URI("id");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("WhiteSpace");
        b0.NCName("id");
        b0.URI("StringData");
        b0.URI("id");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("Length");
        b0.NCName("id");
        b0.URI("StringData");
        b0.URI("id");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("MinLength");
        b0.NCName("id");
        b0.URI("StringData");
        b0.URI("id");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("MaxLength");
        b0.NCName("id");
        b0.URI("StringData");
        b0.URI("id");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("MinInclusive");
        b0.NCName("id");
        b0.URI("StringData");
        b0.URI("id");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("MaxInclusive");
        b0.NCName("id");
        b0.URI("StringData");
        b0.URI("id");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("MinExclusive");
        b0.NCName("id");
        b0.URI("StringData");
        b0.URI("id");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("MaxExclusive");
        b0.NCName("id");
        b0.URI("StringData");
        b0.URI("id");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("TotalDigits");
        b0.NCName("id");
        b0.URI("StringData");
        b0.URI("id");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("FractionDigits");
        b0.NCName("id");
        b0.URI("StringData");
        b0.URI("id");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("Pattern");
        b0.NCName("id");
        b0.URI("StringData");
        b0.URI("id");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("Enumeration");
        b0.NCName("id");
        b0.URI("StringData");
        b0.URI("id");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("SimpleContent");
        b0.NCName("id");
        b0.URI("StringData");
        b0.URI("id");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("ComplexDerivation");
        b0.NCName("id");
        b0.URI("StringData");
        b0.URI("id");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("ComplexRestriction");
        b0.NCName("id");
        b0.URI("StringData");
        b0.URI("id");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("ComplexExtension");
        b0.NCName("id");
        b0.URI("StringData");
        b0.URI("id");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("SimpleDerivation");
        b0.NCName("id");
        b0.URI("StringData");
        b0.URI("id");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("SimpleRestriction");
        b0.NCName("id");
        b0.URI("StringData");
        b0.URI("id");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("SimpleExtension");
        b0.NCName("id");
        b0.URI("StringData");
        b0.URI("id");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("ComplexContent");
        b0.NCName("id");
        b0.URI("StringData");
        b0.URI("id");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("ModelGroupWithParticles");
        b0.NCName("id");
        b0.URI("StringData");
        b0.URI("id");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("Sequence");
        b0.NCName("id");
        b0.URI("StringData");
        b0.URI("id");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("Choice");
        b0.NCName("id");
        b0.URI("StringData");
        b0.URI("id");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("All");
        b0.NCName("id");
        b0.URI("StringData");
        b0.URI("id");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("Any");
        b0.NCName("id");
        b0.URI("StringData");
        b0.URI("id");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("NSContainer");
        b0.NCName("id");
        b0.URI("StringData");
        b0.URI("id");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("NamedComponent");
        b0.NCName("id");
        b0.URI("StringData");
        b0.URI("id");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("Reference");
        b0.NCName("id");
        b0.URI("StringData");
        b0.URI("id");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("Keyref");
        b0.NCName("refer");
        b0.URI("QName");
        b0.URI("refer");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("Selector");
        b0.NCName("xpath");
        b0.URI("XPathString");
        b0.URI("xpath");
        b0._AttributeMapping();
        b0.AttributeMapping_();
        b0.URI("Field");
        b0.NCName("xpath");
        b0.URI("XPathString");
        b0.URI("xpath");
        b0._AttributeMapping();
        b0.StructuralMapping_();
        b0.URI("Unique");
        b0.NCName("field");
        b0.URI("Fields");
        b0.URI("fields");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("Key");
        b0.NCName("field");
        b0.URI("Fields");
        b0.URI("fields");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("Keyref");
        b0.NCName("field");
        b0.URI("Fields");
        b0.URI("fields");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("ElementDecl");
        b0.NCName("unique");
        b0.URI("IdentityConstraintDefs");
        b0.URI("identityConstraintDefs");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("ElementDecl");
        b0.NCName("key");
        b0.URI("IdentityConstraintDefs");
        b0.URI("identityConstraintDefs");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("ElementDecl");
        b0.NCName("keyref");
        b0.URI("IdentityConstraintDefs");
        b0.URI("identityConstraintDefs");
        b0._StructuralMapping();
        b0.ElementMapping_();
        b0.URI("Fields");
        b0.NCName("field");
        b0.URI("Field");
        b1.Resolver();
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("Unique");
        b0.NCName("selector");
        b0.URI("Selector");
        b0.URI("selector");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("Key");
        b0.NCName("selector");
        b0.URI("Selector");
        b0.URI("selector");
        b0._ElementMapping();
        b0.ElementMapping_();
        b0.URI("Keyref");
        b0.NCName("selector");
        b0.URI("Selector");
        b0.URI("selector");
        b0._ElementMapping();
        b0.StructuralMapping_();
        b0.URI("Redefine");
        b0.NCName("complexType");
        b0.URI("RedefineComponents");
        b0.URI("definitions");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("Redefine");
        b0.NCName("simpleType");
        b0.URI("RedefineComponents");
        b0.URI("definitions");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("Redefine");
        b0.NCName("group");
        b0.URI("RedefineComponents");
        b0.URI("definitions");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("Redefine");
        b0.NCName("attributeGroup");
        b0.URI("RedefineComponents");
        b0.URI("definitions");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("Redefine");
        b0.NCName("annotation");
        b0.URI("RedefineComponents");
        b0.URI("definitions");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("Schema");
        b0.NCName("element");
        b0.URI("SchemaComponents");
        b0.URI("components");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("Schema");
        b0.NCName("attribute");
        b0.URI("SchemaComponents");
        b0.URI("components");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("Schema");
        b0.NCName("attributeGroup");
        b0.URI("SchemaComponents");
        b0.URI("components");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("Schema");
        b0.NCName("complexType");
        b0.URI("SchemaComponents");
        b0.URI("components");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("Schema");
        b0.NCName("simpleType");
        b0.URI("SchemaComponents");
        b0.URI("components");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("Schema");
        b0.NCName("group");
        b0.URI("SchemaComponents");
        b0.URI("components");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("Schema");
        b0.NCName("notation");
        b0.URI("SchemaComponents");
        b0.URI("components");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("Schema");
        b0.NCName("import");
        b0.URI("SchemaDirectives");
        b0.URI("directives");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("Schema");
        b0.NCName("include");
        b0.URI("SchemaDirectives");
        b0.URI("directives");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("Schema");
        b0.NCName("annotation");
        b0.URI("SchemaDirectives");
        b0.URI("directives");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("ComplexTypeDef");
        b0.NCName("all");
        b0.URI("DeclaredContent");
        b0.URI("content");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("ComplexTypeDef");
        b0.NCName("sequence");
        b0.URI("DeclaredContent");
        b0.URI("content");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("ComplexTypeDef");
        b0.NCName("choice");
        b0.URI("DeclaredContent");
        b0.URI("content");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("ComplexTypeDef");
        b0.NCName("attribute");
        b0.URI("DeclaredContent");
        b0.URI("content");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("ComplexTypeDef");
        b0.NCName("attributeGroup");
        b0.URI("DeclaredContent");
        b0.URI("content");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("ComplexTypeDef");
        b0.NCName("group");
        b0.URI("DeclaredContent");
        b0.URI("content");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("ComplexExtension");
        b0.NCName("all");
        b0.URI("DeclaredContent");
        b0.URI("content");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("ComplexExtension");
        b0.NCName("sequence");
        b0.URI("DeclaredContent");
        b0.URI("content");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("ComplexExtension");
        b0.NCName("choice");
        b0.URI("DeclaredContent");
        b0.URI("content");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("ComplexExtension");
        b0.NCName("attribute");
        b0.URI("DeclaredContent");
        b0.URI("content");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("ComplexExtension");
        b0.NCName("attributeGroup");
        b0.URI("DeclaredContent");
        b0.URI("content");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("ComplexExtension");
        b0.NCName("anyAttribute");
        b0.URI("DeclaredContent");
        b0.URI("content");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("ComplexExtension");
        b0.NCName("group");
        b0.URI("DeclaredContent");
        b0.URI("content");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("ComplexRestriction");
        b0.NCName("all");
        b0.URI("DeclaredContent");
        b0.URI("content");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("ComplexRestriction");
        b0.NCName("sequence");
        b0.URI("DeclaredContent");
        b0.URI("content");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("ComplexRestriction");
        b0.NCName("choice");
        b0.URI("DeclaredContent");
        b0.URI("content");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("ComplexRestriction");
        b0.NCName("attribute");
        b0.URI("DeclaredContent");
        b0.URI("content");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("ComplexRestriction");
        b0.NCName("attributeGroup");
        b0.URI("DeclaredContent");
        b0.URI("content");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("ComplexRestriction");
        b0.NCName("anyAttribute");
        b0.URI("DeclaredContent");
        b0.URI("content");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("ComplexRestriction");
        b0.NCName("group");
        b0.URI("DeclaredContent");
        b0.URI("content");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("Sequence");
        b0.NCName("all");
        b0.URI("Particles");
        b0.URI("particles");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("Sequence");
        b0.NCName("element");
        b0.URI("Particles");
        b0.URI("particles");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("Sequence");
        b0.NCName("group");
        b0.URI("Particles");
        b0.URI("particles");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("Sequence");
        b0.NCName("choice");
        b0.URI("Particles");
        b0.URI("particles");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("Sequence");
        b0.NCName("sequence");
        b0.URI("Particles");
        b0.URI("particles");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("Sequence");
        b0.NCName("any");
        b0.URI("Particles");
        b0.URI("particles");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("Choice");
        b0.NCName("all");
        b0.URI("Particles");
        b0.URI("particles");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("Choice");
        b0.NCName("element");
        b0.URI("Particles");
        b0.URI("particles");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("Choice");
        b0.NCName("group");
        b0.URI("Particles");
        b0.URI("particles");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("Choice");
        b0.NCName("sequence");
        b0.URI("Particles");
        b0.URI("particles");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("Choice");
        b0.NCName("choice");
        b0.URI("Particles");
        b0.URI("particles");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("Choice");
        b0.NCName("any");
        b0.URI("Particles");
        b0.URI("particles");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("All");
        b0.NCName("element");
        b0.URI("Particles");
        b0.URI("particles");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("SimpleRestriction");
        b0.NCName("length");
        b0.URI("Facets");
        b0.URI("facets");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("SimpleRestriction");
        b0.NCName("minLength");
        b0.URI("Facets");
        b0.URI("facets");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("SimpleRestriction");
        b0.NCName("maxLength");
        b0.URI("Facets");
        b0.URI("facets");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("SimpleRestriction");
        b0.NCName("pattern");
        b0.URI("Facets");
        b0.URI("facets");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("SimpleRestriction");
        b0.NCName("enumeration");
        b0.URI("Facets");
        b0.URI("facets");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("SimpleRestriction");
        b0.NCName("whiteSpace");
        b0.URI("Facets");
        b0.URI("facets");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("SimpleRestriction");
        b0.NCName("minInclusive");
        b0.URI("Facets");
        b0.URI("facets");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("SimpleRestriction");
        b0.NCName("maxInclusive");
        b0.URI("Facets");
        b0.URI("facets");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("SimpleRestriction");
        b0.NCName("minExclusive");
        b0.URI("Facets");
        b0.URI("facets");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("SimpleRestriction");
        b0.NCName("maxExclusive");
        b0.URI("Facets");
        b0.URI("facets");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("SimpleRestriction");
        b0.NCName("totalDigits");
        b0.URI("Facets");
        b0.URI("facets");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("SimpleRestriction");
        b0.NCName("fractionDigits");
        b0.URI("Facets");
        b0.URI("facets");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("SimpleTypeRestriction");
        b0.NCName("length");
        b0.URI("Facets");
        b0.URI("facets");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("SimpleTypeRestriction");
        b0.NCName("minLength");
        b0.URI("Facets");
        b0.URI("facets");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("SimpleTypeRestriction");
        b0.NCName("maxLength");
        b0.URI("Facets");
        b0.URI("facets");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("SimpleTypeRestriction");
        b0.NCName("pattern");
        b0.URI("Facets");
        b0.URI("facets");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("SimpleTypeRestriction");
        b0.NCName("enumeration");
        b0.URI("Facets");
        b0.URI("facets");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("SimpleTypeRestriction");
        b0.NCName("whiteSpace");
        b0.URI("Facets");
        b0.URI("facets");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("SimpleTypeRestriction");
        b0.NCName("minInclusive");
        b0.URI("Facets");
        b0.URI("facets");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("SimpleTypeRestriction");
        b0.NCName("maxInclusive");
        b0.URI("Facets");
        b0.URI("facets");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("SimpleTypeRestriction");
        b0.NCName("minExclusive");
        b0.URI("Facets");
        b0.URI("facets");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("SimpleTypeRestriction");
        b0.NCName("maxExclusive");
        b0.URI("Facets");
        b0.URI("facets");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("SimpleTypeRestriction");
        b0.NCName("totalDigits");
        b0.URI("Facets");
        b0.URI("facets");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("SimpleTypeRestriction");
        b0.NCName("fractionDigits");
        b0.URI("Facets");
        b0.URI("facets");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("AttributeGroupDef");
        b0.NCName("attribute");
        b0.URI("AttributeUseOrGroups");
        b0.URI("attributeUses");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("AttributeGroupDef");
        b0.NCName("attributeGroup");
        b0.URI("AttributeUseOrGroups");
        b0.URI("attributeUses");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("DeclaredContent");
        b0.NCName("attribute");
        b0.URI("AttributeUseOrGroups");
        b0.URI("attributeUses");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("DeclaredContent");
        b0.NCName("attributeGroup");
        b0.URI("AttributeUseOrGroups");
        b0.URI("attributeUses");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("SimpleExtension");
        b0.NCName("attribute");
        b0.URI("AttributeUseOrGroups");
        b0.URI("attributeUses");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("SimpleExtension");
        b0.NCName("attributeGroup");
        b0.URI("AttributeUseOrGroups");
        b0.URI("attributeUses");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("SimpleRestriction");
        b0.NCName("attribute");
        b0.URI("AttributeUseOrGroups");
        b0.URI("attributeUses");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("Union");
        b0.NCName("simpleType");
        b0.URI("SimpleTypeDefs");
        b0.URI("memberTypesDefs");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("Annotation");
        b0.NCName("documentation");
        b0.URI("AnnotationList");
        b0.URI("list");
        b0._StructuralMapping();
        b0.StructuralMapping_();
        b0.URI("Annotation");
        b0.NCName("appinfo");
        b0.URI("AnnotationList");
        b0.URI("list");
        b0._StructuralMapping();
        b0._Mappings();
        b0.DataTypes_(5);
        b0.EnumDataType_();
        b0.URI("ProcessContents");
        b0.EnumValues_(3);
        b0.EnumValue_();
        b0.Value("strict");
        b0.Value("strict");
        b0._EnumValue();
        b0.EnumValue_();
        b0.Value("lax");
        b0.Value("lax");
        b0._EnumValue();
        b0.EnumValue_();
        b0.Value("skip");
        b0.Value("skip");
        b0._EnumValue();
        b0._EnumValues();
        b0._EnumDataType();
        b0.EnumDataType_();
        b0.URI("DerivationControl");
        b0.EnumValues_(5);
        b0.EnumValue_();
        b0.Value("substitution");
        b0.Value("substitution");
        b0._EnumValue();
        b0.EnumValue_();
        b0.Value("extension");
        b0.Value("extension");
        b0._EnumValue();
        b0.EnumValue_();
        b0.Value("restriction");
        b0.Value("restriction");
        b0._EnumValue();
        b0.EnumValue_();
        b0.Value("list");
        b0.Value("list");
        b0._EnumValue();
        b0.EnumValue_();
        b0.Value("union");
        b0.Value("union");
        b0._EnumValue();
        b0._EnumValues();
        b0._EnumDataType();
        b0.EnumDataType_();
        b0.URI("Use");
        b0.EnumValues_(3);
        b0.EnumValue_();
        b0.Value("optional");
        b0.Value("optional");
        b0._EnumValue();
        b0.EnumValue_();
        b0.Value("prohibited");
        b0.Value("prohibited");
        b0._EnumValue();
        b0.EnumValue_();
        b0.Value("required");
        b0.Value("required");
        b0._EnumValue();
        b0._EnumValues();
        b0._EnumDataType();
        b0.EnumDataType_();
        b0.URI("WhiteSpaceProcessing");
        b0.EnumValues_(3);
        b0.EnumValue_();
        b0.Value("preserve");
        b0.Value("preserve");
        b0._EnumValue();
        b0.EnumValue_();
        b0.Value("replace");
        b0.Value("replace");
        b0._EnumValue();
        b0.EnumValue_();
        b0.Value("collapse");
        b0.Value("collapse");
        b0._EnumValue();
        b0._EnumValues();
        b0._EnumDataType();
        b0.EnumDataType_();
        b0.URI("Qualify");
        b0.EnumValues_(2);
        b0.EnumValue_();
        b0.Value("unqualified");
        b0.Value("unqualified");
        b0._EnumValue();
        b0.EnumValue_();
        b0.Value("qualified");
        b0.Value("qualified");
        b0._EnumValue();
        b0._EnumValues();
        b0._EnumDataType();
        b0._DataTypes();
        b0._MappingStrategy();
    }
}
