package org.whole.lang.models.codebase;

import org.whole.lang.templates.AbstractTemplateFactory;
import org.whole.lang.builders.IBuilderOperation;
import org.whole.lang.models.reflect.ModelsLanguageKit;
import org.whole.lang.models.builders.IModelsBuilder;

/**
 * @generator Whole
 */
public class ProcessGraphModel extends AbstractTemplateFactory<org.whole.lang.models.model.Model> {
	public void apply(IBuilderOperation op) {
		IModelsBuilder b0 = (IModelsBuilder) op
				.wGetBuilder(ModelsLanguageKit.URI);
		b0.Model_();
		b0.SimpleName("ProcessGraph");
		b0.TypeRelations();
		b0.ModelDeclarations_(9);
		b0.SimpleEntity_();
		b0.EntityModifiers();
		b0.SimpleName("ProcessGraph");
		b0.Types();
		b0.Features_(2);
		b0.Feature_();
		b0.FeatureModifiers();
		b0.SimpleName("Nodes");
		b0.SimpleName("nodes");
		b0._Feature();
		b0.Feature_();
		b0.FeatureModifiers();
		b0.SimpleName("Transitions");
		b0.SimpleName("transitions");
		b0._Feature();
		b0._Features();
		b0._SimpleEntity();
		b0.CompositeEntity_();
		b0.EntityModifiers();
		b0.SimpleName("Nodes");
		b0.Types();
		b0.ComponentModifiers_(1);
		b0.ComponentModifier("unique");
		b0._ComponentModifiers();
		b0.SimpleName("Node");
		b0._CompositeEntity();
		b0.SimpleEntity_();
		b0.EntityModifiers();
		b0.SimpleName("Node");
		b0.Types();
		b0.Features_(6);
		b0.Feature_();
		b0.FeatureModifiers();
		b0.SimpleName("Pixels");
		b0.SimpleName("x");
		b0._Feature();
		b0.Feature_();
		b0.FeatureModifiers();
		b0.SimpleName("Pixels");
		b0.SimpleName("y");
		b0._Feature();
		b0.Feature_();
		b0.FeatureModifiers();
		b0.SimpleName("Pixels");
		b0.SimpleName("width");
		b0._Feature();
		b0.Feature_();
		b0.FeatureModifiers();
		b0.SimpleName("Pixels");
		b0.SimpleName("height");
		b0._Feature();
		b0.Feature_();
		b0.FeatureModifiers_(1);
		b0.FeatureModifier("reference");
		b0._FeatureModifiers();
		b0.SimpleName("Transitions");
		b0.SimpleName("arrivingTransitions");
		b0._Feature();
		b0.Feature_();
		b0.FeatureModifiers_(1);
		b0.FeatureModifier("reference");
		b0._FeatureModifiers();
		b0.SimpleName("Transitions");
		b0.SimpleName("leavingTransitions");
		b0._Feature();
		b0._Features();
		b0._SimpleEntity();
		b0.CompositeEntity_();
		b0.EntityModifiers();
		b0.SimpleName("Transitions");
		b0.Types();
		b0.ComponentModifiers_(1);
		b0.ComponentModifier("unique");
		b0._ComponentModifiers();
		b0.SimpleName("Transition");
		b0._CompositeEntity();
		b0.SimpleEntity_();
		b0.EntityModifiers();
		b0.SimpleName("Transition");
		b0.Types();
		b0.Features_(2);
		b0.Feature_();
		b0.FeatureModifiers_(1);
		b0.FeatureModifier("reference");
		b0._FeatureModifiers();
		b0.SimpleName("Node");
		b0.SimpleName("fromNode");
		b0._Feature();
		b0.Feature_();
		b0.FeatureModifiers_(1);
		b0.FeatureModifier("reference");
		b0._FeatureModifiers();
		b0.SimpleName("Node");
		b0.SimpleName("toNode");
		b0._Feature();
		b0._Features();
		b0._SimpleEntity();
		b0.SimpleEntity_();
		b0.EntityModifiers();
		b0.SimpleName("ProcessExecution");
		b0.Types();
		b0.Features_(1);
		b0.Feature_();
		b0.FeatureModifiers();
		b0.SimpleName("Token");
		b0.SimpleName("root");
		b0._Feature();
		b0._Features();
		b0._SimpleEntity();
		b0.SimpleEntity_();
		b0.EntityModifiers();
		b0.SimpleName("Token");
		b0.Types();
		b0.Features_(2);
		b0.Feature_();
		b0.FeatureModifiers_(1);
		b0.FeatureModifier("reference");
		b0._FeatureModifiers();
		b0.SimpleName("Node");
		b0.SimpleName("node");
		b0._Feature();
		b0.Feature_();
		b0.FeatureModifiers();
		b0.SimpleName("Tokens");
		b0.SimpleName("leavingTokens");
		b0._Feature();
		b0._Features();
		b0._SimpleEntity();
		b0.CompositeEntity_();
		b0.EntityModifiers();
		b0.SimpleName("Tokens");
		b0.Types();
		b0.ComponentModifiers_(1);
		b0.ComponentModifier("unique");
		b0._ComponentModifiers();
		b0.SimpleName("Token");
		b0._CompositeEntity();
		b0.DataEntity_();
		b0.EntityModifiers();
		b0.SimpleName("Pixels");
		b0.Types();
		b0.DataType("int");
		b0._DataEntity();
		b0._ModelDeclarations();
        b0.Namespace("org.whole.lang.processgraph");
        org.whole.lang.commons.builders.ICommonsBuilder b1 = (org.whole.lang.commons.builders.ICommonsBuilder) op.wGetBuilder(org.whole.lang.commons.reflect.CommonsLanguageKit.URI);
        b1.Resolver();
        b0.URI("http://lang.whole.org/ProcessGraph");
		b0._Model();
	}
}