package org.whole.lang.models.codebase;

import org.whole.lang.templates.AbstractTemplateFactory;
import org.whole.lang.builders.IBuilderOperation;
import org.whole.lang.models.reflect.ModelsLanguageKit;
import org.whole.lang.models.builders.IModelsBuilder;

/**
 * @generator Whole
 */
public class EBNFModel extends AbstractTemplateFactory<org.whole.lang.models.model.Model> {
	public void apply(IBuilderOperation op) {
		IModelsBuilder b0 = (IModelsBuilder) op
				.wGetBuilder(ModelsLanguageKit.URI);
		b0.Model_();
		b0.SimpleName("EBNF");
		b0.TypeRelations();
		b0.ModelDeclarations_(13);
		b0.SimpleEntity_();
		b0.EntityModifiers();
		b0.SimpleName("Grammar");
		b0.Types();
		b0.Features_(3);
		b0.Feature_();
		b0.FeatureModifiers();
		b0.SimpleName("Name");
		b0.SimpleName("name");
		b0._Feature();
		b0.Feature_();
		b0.FeatureModifiers();
		b0.SimpleName("NonTerminal");
		b0.SimpleName("root");
		b0._Feature();
		b0.Feature_();
		b0.FeatureModifiers();
		b0.SimpleName("Productions");
		b0.SimpleName("productions");
		b0._Feature();
		b0._Features();
		b0._SimpleEntity();
		b0.DataEntity_();
		b0.EntityModifiers();
		b0.SimpleName("Name");
		b0.Types();
		b0.DataType("String");
		b0._DataEntity();
		b0.CompositeEntity_();
		b0.EntityModifiers();
		b0.SimpleName("Productions");
		b0.Types();
		b0.ComponentModifiers_(1);
		b0.ComponentModifier("unique");
		b0._ComponentModifiers();
		b0.SimpleName("Production");
		b0._CompositeEntity();
		b0.SimpleEntity_();
		b0.EntityModifiers();
		b0.SimpleName("Production");
		b0.Types();
		b0.Features_(2);
		b0.Feature_();
		b0.FeatureModifiers();
		b0.SimpleName("NonTerminal");
		b0.SimpleName("name");
		b0._Feature();
		b0.Feature_();
		b0.FeatureModifiers();
		b0.SimpleName("AltRegExp");
		b0.SimpleName("regExp");
		b0._Feature();
		b0._Features();
		b0._SimpleEntity();
		b0.DataEntity_();
		b0.EntityModifiers();
		b0.SimpleName("Terminal");
		b0.Types_(1);
		b0.SimpleName("IRegExp");
		b0._Types();
		b0.DataType("String");
		b0._DataEntity();
		b0.DataEntity_();
		b0.EntityModifiers();
		b0.SimpleName("NonTerminal");
		b0.Types_(1);
		b0.SimpleName("IRegExp");
		b0._Types();
		b0.DataType("String");
		b0._DataEntity();
		b0.SimpleEntity_();
		b0.EntityModifiers();
		b0.SimpleName("EmptyRegExp");
		b0.Types_(1);
		b0.SimpleName("IRegExp");
		b0._Types();
		b0.Features();
		b0._SimpleEntity();
		b0.SimpleEntity_();
		b0.EntityModifiers();
		b0.SimpleName("StarRegExp");
		b0.Types_(1);
		b0.SimpleName("IRegExp");
		b0._Types();
		b0.Features_(1);
		b0.Feature_();
		b0.FeatureModifiers();
		b0.SimpleName("IRegExp");
		b0.SimpleName("regExp");
		b0._Feature();
		b0._Features();
		b0._SimpleEntity();
		b0.SimpleEntity_();
		b0.EntityModifiers();
		b0.SimpleName("PlusRegExp");
		b0.Types_(1);
		b0.SimpleName("IRegExp");
		b0._Types();
		b0.Features_(1);
		b0.Feature_();
		b0.FeatureModifiers();
		b0.SimpleName("IRegExp");
		b0.SimpleName("regExp");
		b0._Feature();
		b0._Features();
		b0._SimpleEntity();
		b0.SimpleEntity_();
		b0.EntityModifiers();
		b0.SimpleName("OptRegExp");
		b0.Types_(1);
		b0.SimpleName("IRegExp");
		b0._Types();
		b0.Features_(1);
		b0.Feature_();
		b0.FeatureModifiers();
		b0.SimpleName("IRegExp");
		b0.SimpleName("regExp");
		b0._Feature();
		b0._Features();
		b0._SimpleEntity();
		b0.CompositeEntity_();
		b0.EntityModifiers();
		b0.SimpleName("SeqRegExp");
		b0.Types_(1);
		b0.SimpleName("IRegExp");
		b0._Types();
		b0.ComponentModifiers_(1);
		b0.ComponentModifier("unique");
		b0._ComponentModifiers();
		b0.SimpleName("IRegExp");
		b0._CompositeEntity();
		b0.CompositeEntity_();
		b0.EntityModifiers();
		b0.SimpleName("AltRegExp");
		b0.Types_(1);
		b0.SimpleName("IRegExp");
		b0._Types();
		b0.ComponentModifiers_(1);
		b0.ComponentModifier("unique");
		b0._ComponentModifiers();
		b0.SimpleName("IRegExp");
		b0._CompositeEntity();
		b0.SimpleEntity_();
		b0.EntityModifiers();
		b0.SimpleName("Alt2RegExp");
		b0.Types_(1);
		b0.SimpleName("IRegExp");
		b0._Types();
		b0.Features_(2);
		b0.Feature_();
		b0.FeatureModifiers();
		b0.SimpleName("IRegExp");
		b0.SimpleName("regExp1");
		b0._Feature();
		b0.Feature_();
		b0.FeatureModifiers();
		b0.SimpleName("IRegExp");
		b0.SimpleName("regExp2");
		b0._Feature();
		b0._Features();
		b0._SimpleEntity();
		b0._ModelDeclarations();
        b0.Namespace("org.whole.lang.ebnf");
        org.whole.lang.commons.builders.ICommonsBuilder b1 = (org.whole.lang.commons.builders.ICommonsBuilder) op.wGetBuilder(org.whole.lang.commons.reflect.CommonsLanguageKit.URI);
        b1.Resolver();
        b0.URI("http://lang.whole.org/EBNF");
		b0._Model();
	}
}